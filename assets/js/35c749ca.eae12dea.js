"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[8542],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>b});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(t),b=a,g=p["".concat(s,".").concat(b)]||p[b]||u[b]||o;return t?r.createElement(g,i(i({ref:n},d),{},{components:t})):r.createElement(g,i({ref:n},d))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7229:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={title:"RAP BO erweitern",description:"",sidebar_position:40},i=void 0,c={unversionedId:"rap-cookbook/extend-bo",id:"rap-cookbook/extend-bo",title:"RAP BO erweitern",description:"",source:"@site/docs/rap-cookbook/extend-bo.md",sourceDirName:"rap-cookbook",slug:"/rap-cookbook/extend-bo",permalink:"/s4hana/rap-cookbook/extend-bo",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/rap-cookbook/extend-bo.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{title:"RAP BO erweitern",description:"",sidebar_position:40},sidebar:"rapCookbookSidebar",previous:{title:"Oberfl\xe4che festlegen",permalink:"/s4hana/rap-cookbook/define-ui"},next:{title:"Business Service erweitern",permalink:"/s4hana/rap-cookbook/extend-service"}},s={},l=[{value:"Datenbanktabelle ZABOOKING",id:"datenbanktabelle-zabooking",level:2},{value:"Restricted Interface View ZR_Booking",id:"restricted-interface-view-zr_booking",level:2},{value:"Restricted Interface View ZR_Travel",id:"restricted-interface-view-zr_travel",level:2}],d={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Um das RAP BO um Buchungen zu erweitern, muss zun\xe4chst eine entsprechende Datenbanktabelle f\xfcr Buchungen erstellt werden. Anschlie\xdfend wird darauf aufbauend eine dazugeh\xf6rige Restricted Interface View inklusive einer Assoziation zu den Reisen erstellt. Zuletzt wird die Restricted Interface View f\xfcr Reisen um eine Assoziation zu den Buchungen erweitert."),(0,a.kt)("h2",{id:"datenbanktabelle-zabooking"},"Datenbanktabelle ZABOOKING"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"@EndUserText.label : 'Booking'\n@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE\n@AbapCatalog.tableCategory : #TRANSPARENT\n@AbapCatalog.deliveryClass : #A\n@AbapCatalog.dataMaintenance : #RESTRICTED\ndefine table zabooking {\n  key client       : abap.clnt not null;\n  key booking_uuid : sysuuid_x16 not null;\n  travel_uuid      : sysuuid_x16 not null;\n  booking_id       : /dmo/booking_id;\n  booking_date     : /dmo/booking_date;\n  carrier_id       : /dmo/carrier_id;\n  connection_id    : /dmo/connection_id;\n  flight_date      : /dmo/flight_date;\n  @Semantics.amount.currencyCode : 'zabooking.currency_code'\n  flight_price     : /dmo/flight_price;\n  currency_code    : /dmo/currency_code;\n  status           : /dmo/booking_status;\n}\n")),(0,a.kt)("h2",{id:"restricted-interface-view-zr_booking"},"Restricted Interface View ZR_Booking"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"@AccessControl.authorizationCheck: #NOT_REQUIRED\n@EndUserText.label: 'Booking'\ndefine view entity ZR_Booking\n  as select from zabooking\n  association to parent ZR_Travel as _Travel on $projection.TravelUuid = _Travel.TravelUuid\n{\n  key booking_uuid  as BookingUuid,\n      travel_uuid   as TravelUuid,\n      booking_id    as BookingId,\n      booking_date  as BookingDate,\n      carrier_id    as CarrierId,\n      connection_id as ConnectionId,\n      flight_date   as FlightDate,\n      @Semantics.amount.currencyCode: 'CurrencyCode'\n      flight_price  as FlightPrice,\n      currency_code as CurrencyCode,\n      status        as Status,\n\n      /* Associations */\n      _Travel\n}\n")),(0,a.kt)("h2",{id:"restricted-interface-view-zr_travel"},"Restricted Interface View ZR_Travel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"@AccessControl.authorizationCheck: #NOT_REQUIRED\n@EndUserText.label: 'Travel'\ndefine root view entity ZR_Travel\n  as select from zatravel\n  composition [0..*] of ZR_Booking as _Bookings\n{\n  key travel_uuid           as TravelUuid,\n      travel_id             as TravelId,\n      customer_id           as CustomerId,\n      begin_date            as BeginDate,\n      end_date              as EndDate,\n      description           as Description,\n      @Semantics.amount.currencyCode: 'CurrencyCode'\n      total_price           as TotalPrice,\n      currency_code         as CurrencyCode,\n      created_by            as CreatedBy,\n      created_at            as CreatedAt,\n      local_last_changed_by as LocalLastChangedBy,\n      local_last_changed_at as LocalLastChangedAt,\n      last_changed_at       as LastChangedAt,\n\n      /* Associations */\n      _Bookings\n}\n")))}u.isMDXComponent=!0}}]);