"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[1114],{3905:(e,n,t)=>{t.d(n,{Zo:()=>E,kt:()=>I});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},E=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,E=d(e,["components","mdxType","originalType","parentName"]),s=l(t),I=i,T=s["".concat(c,".").concat(I)]||s[I]||p[I]||o;return t?r.createElement(T,a(a({ref:n},E),{},{components:t})):r.createElement(T,a({ref:n},E))}));function I(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=s;var d={};for(var c in n)hasOwnProperty.call(n,c)&&(d[c]=n[c]);d.originalType=e,d.mdxType="string"==typeof e?e:i,a[1]=d;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},3964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const o={title:"Entity Manipulation Language (EML)",description:"",sidebar_position:40,tags:[]},a=void 0,d={unversionedId:"documentation/rap/eml",id:"documentation/rap/eml",title:"Entity Manipulation Language (EML)",description:"",source:"@site/docs/documentation/rap/eml.md",sourceDirName:"documentation/rap",slug:"/documentation/rap/eml",permalink:"/s4hana/documentation/rap/eml",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/rap/eml.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{title:"Entity Manipulation Language (EML)",description:"",sidebar_position:40,tags:[]},sidebar:"documentationSidebar",previous:{title:"Laufzeitartefakte einer RAP-Anwendung",permalink:"/s4hana/documentation/rap/runtime-artifacts"}},c={},l=[{value:"Lesende Zugriffe",id:"lesende-zugriffe",level:2},{value:"Schreibende Zugriffe",id:"schreibende-zugriffe",level:2}],E={toc:l};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},E,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Die ",(0,i.kt)("em",{parentName:"p"},"Entity Manpipulation Language")," (EML) ermg\xf6glicht den lesenden und schreibenden Zugriff auf RAP BOs. F\xfcr den lesenden Zugriff stellt EML die Anweisung ",(0,i.kt)("inlineCode",{parentName:"p"},"READ ENTITIES"),", f\xfcr den schreibenden Zurgiff die Anweisung ",(0,i.kt)("inlineCode",{parentName:"p"},"MODIFY ENTITITES")," mit den Zusatzw\xf6rtern ",(0,i.kt)("inlineCode",{parentName:"p"},"CREATE"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"CREATE_BY"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"UPDATE"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE")," und ",(0,i.kt)("inlineCode",{parentName:"p"},"EXECUTE")," zur Verf\xfcgung."),(0,i.kt)("h2",{id:"lesende-zugriffe"},"Lesende Zugriffe"),(0,i.kt)("p",null,"F\xfcr die lesenden Zugriffe sind vor allem zwei Parameter wichtig: der Import-Parameter, welcher die Schl\xfcssel der zu lesenden Eintr\xe4ge enth\xe4lt (",(0,i.kt)("inlineCode",{parentName:"p"},"WITH"),") sowie der Export-Parameter, welcher die erfolgreich gelesenen Eintr\xe4ge enth\xe4lt (",(0,i.kt)("inlineCode",{parentName:"p"},"RESULT"),"). Weitere Export-Parameter beinhalten Informationen zu etwaig erzeugten Nachrichten (",(0,i.kt)("inlineCode",{parentName:"p"},"REPORTED"),") und etwaig fehlgeschlagenen Schl\xfcsseln (",(0,i.kt)("inlineCode",{parentName:"p"},"FAILED"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap",metastring:"showLineNumbers",showLineNumbers:!0},"DATA keys        TYPE TABLE FOR READ IMPORT ZI_ConnectionTP.\nDATA connections TYPE TABLE FOR READ RESULT ZI_ConnectionTP.\nDATA reported    TYPE RESPONSE FOR REPORTED ZI_ConnectionTP.\nDATA failed      TYPE RESPONSE FOR FAILED ZI_ConnectionTP.\n\nkeys = VALUE #( ( CarrierId = 'LH' ConnectionId '0400' ) ).\n\nREAD ENTITIES OF ZI_ConnectionTP\n     ENTITY Connection\n     ALL FIELDS\n     WITH keys\n     RESULT connections\n     REPORTED reported\n     FAILED failed.\nIF failed IS NOT INITIAL.\n  \" Error Handling\nENDIF.\n")),(0,i.kt)("admonition",{title:"Hinweis",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Der Zusatz ",(0,i.kt)("inlineCode",{parentName:"p"},"FIELDS")," legt fest, welche Felder gelesen werden sollen. Schl\xfcsselfelder m\xfcssen hierbei nicht explizit angegeben werden und der Zusatz ",(0,i.kt)("inlineCode",{parentName:"p"},"ALL FIELDS")," erm\xf6glicht das Lesen aller Felder.")),(0,i.kt)("h2",{id:"schreibende-zugriffe"},"Schreibende Zugriffe"),(0,i.kt)("p",null,"Neben den bereits genannten Parametern der Leseanweisung besitzen die Operationen ",(0,i.kt)("inlineCode",{parentName:"p"},"CREATE")," und ",(0,i.kt)("inlineCode",{parentName:"p"},"CREATE BY")," den Parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"MAPPED"),", welcher die ",(0,i.kt)("em",{parentName:"p"},"Content IDs")," (CIDs) sowie die Schl\xfcssel der erzeugten Eintr\xe4ge beinhaltet.\nCIDs sind tempor\xe4re Schl\xfcssel von RAP BO Eintr\xe4gen; die Angabe von CIDs bei EML-Operationen wird dringend empfohlen."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap",metastring:"showLineNumbers",showLineNumbers:!0},"DATA connections_for_create TYPE TABLE FOR CREATE ZI_ConnectionTP.\nDATA connections_for_update TYPE TABLE FOR UPDATE ZI_ConnectionTP.\nDATA connections_for_delete TYPE TABLE FOR DELETE ZI_ConnectionTP.\nDATA flights_for_create     TYPE TABLE FOR CREATE ZI_ConnectionTP\\_Flights.\nDATA connections_for_action TYPE TABLE FOR ACTION IMPORT ZI_ConnectionTP~ConvertDistance.\nDATA mapped                 TYPE RESPONSE FOR MAPPED ZI_ConnectionTP.\nDATA reported               TYPE RESPONSE FOR REPORTED ZI_ConnectionTP.\nDATA failed                 TYPE RESPONSE FOR FAILED ZI_ConnectionTP.\n\n\" Create operation\nconnections_for_create = VALUE #( ( CarrierId = 'LH' ConnectionId = '0400' ) ).\n\nMODIFY ENTITIES OF ZI_ConnectionTP\n       ENTITY Connection\n       CREATE\n       FIELDS ( CarrierId ConnectionId )\n       AUTO FILL CID\n       WITH connections_for_create\n       MAPPED mapped\n       REPORTED reported\n       FAILED failed.\nIF failed IS NOT INITIAL.\n  \" Error Handling\nENDIF.\n\n\" Create By operation\nflights_for_create = VALUE #( ( CarrierId = 'LH' ConnectionId = '0400' )\n                                %target   = VALUE #( ( CarrierId = 'LH' ConnectionId = '0400' FlightDate = '20231013' )\n                                                     ( CarrierId = 'LH' ConnectionId = '0400' FlightDate = '20240909' )\n                                                     ( CarrierId = 'LH' ConnectionId = '0400' FlightDate = '20251024' ) ) ) ).\n\nMODIFY ENTITIES OF ZI_ConnectionTP\n       ENTITY Connection\n       CREATE BY \\_Flights\n       FIELDS ( CarrierId ConnectionId FlightDate )\n       AUTO FILL CID\n       WITH flights_for_create\n       MAPPED mapped\n       REPORTED reported\n       FAILED failed.\nIF failed IS NOT INITIAL.\n  \" Error Handling\nENDIF.\n\n\" Update operation\nconnections_for_update = VALUE #( ( CarrierId = 'LH' ConnectionId = '0400' AirportFromId = 'FRA' AirportToId = 'JFK' ) ).\n\nMODIFY ENTITIES OF ZI_ConnectionTP\n       ENTITY Connection\n       UPDATE\n       FIELDS ( AirportFromId AirportToId )\n       WITH connections_for_update\n       REPORTED reported\n       FAILED failed.\nIF failed IS NOT INITIAL.\n  \" Error Handling\nENDIF.\n\n\" Delete operation\nconnections_for_delete = VALUE #( ( CarrierId = 'LH' ConnectionId = '0400' ) ).\n\nMODIFY ENTITIES OF ZI_ConnectionTP\n       ENTITY Connection\n       DELETE\n       FROM connections_for_delete\n       REPORTED reported\n       FAILED failed.\nIF failed IS NOT INITIAL.\n  \" Error Handling\nENDIF.\n\n\" Execute action operation\nconnections_for_action = VALUE #( ( CarrierId = 'LH' ConnectionId = '0400' %param-Unit = 'KM' ) ).\n\nMODIFY ENTITIES OF ZI_ConnectionTP\n       ENTITY Connection\n       EXECUTE ConvertDistance\n       FROM connections_for_action\n       REPORTED reported\n       FAILED failed.\nIF failed IS NOT INITIAL.\n  \" Error Handling\nENDIF.\n")),(0,i.kt)("admonition",{title:"Hinweis",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Der Zusatz ",(0,i.kt)("inlineCode",{parentName:"p"},"AUTO FILL CID")," sorgt daf\xfcr, dass die CID automatisch bef\xfcllt wird.")))}p.isMDXComponent=!0}}]);