"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[9046],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>_});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),l=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(a),_=r,d=u["".concat(i,".").concat(_)]||u[_]||b[_]||o;return a?n.createElement(d,c(c({ref:t},s),{},{components:a})):n.createElement(d,c({ref:t},s))}));function _(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,c=new Array(o);c[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,c[1]=p;for(var l=2;l<o;l++)c[l]=a[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9106:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>b,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=a(7462),r=(a(7294),a(3905));const o={title:"ZABAP_DEMO_ABAPOO_03",description:"Statische Attribute und Methoden"},c=void 0,p={unversionedId:"abap-objects/code/reports/zabap_demo_abapoo_03",id:"abap-objects/code/reports/zabap_demo_abapoo_03",title:"ZABAP_DEMO_ABAPOO_03",description:"Statische Attribute und Methoden",source:"@site/docs/abap-objects/code/reports/zabap_demo_abapoo_03.md",sourceDirName:"abap-objects/code/reports",slug:"/abap-objects/code/reports/zabap_demo_abapoo_03",permalink:"/s4hana/abap-objects/code/reports/zabap_demo_abapoo_03",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-objects/code/reports/zabap_demo_abapoo_03.md",tags:[],version:"current",frontMatter:{title:"ZABAP_DEMO_ABAPOO_03",description:"Statische Attribute und Methoden"},sidebar:"abapObjectsSidebar",previous:{title:"ZABAP_DEMO_ABAPOO_02",permalink:"/s4hana/abap-objects/code/reports/zabap_demo_abapoo_02"},next:{title:"ZABAP_DEMO_ABAPOO_04",permalink:"/s4hana/abap-objects/code/reports/zabap_demo_abapoo_04"}},i={},l=[],s={toc:l};function b(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-abap"},"* Statische Attribute und Methoden\nREPORT zabap_demo_abapoo_03.\n\n*-------------------------------------------------------------------*\n* Deklarationen\n*-------------------------------------------------------------------*\nDATA vehicle TYPE REF TO zcl_abap_vehicle.\nDATA vehicles TYPE TABLE OF REF TO zcl_abap_vehicle.\n\n*-------------------------------------------------------------------*\n* Objekterzeugungen\n*-------------------------------------------------------------------*\nWRITE: / zcl_abap_vehicle=>get_number_of_vehicles( ).\n\nvehicle = new zcl_abap_vehicle( make = 'Porsche' model = '911' ).\nvehicles = VALUE #( BASE vehicles (vehicle ) ).\n\nvehicle = new zcl_abap_vehicle ( make = 'MAN' model = 'TGX' ).\nvehicles = VALUE #( BASE vehicles (vehicle ) ).\n\nvehicle = new zcl_abap_vehicle ( make = 'Opel' model = 'Zafira Life' ).\nvehicles = VALUE #( BASE vehicles (vehicle ) ).\n\nWRITE: / zcl_abap_vehicle=>get_number_of_vehicles( ).\n\n*-------------------------------------------------------------------*\n* Ausgabe\n*-------------------------------------------------------------------*\nLOOP AT vehicles INTO vehicle.\n  WRITE: / vehicle->to_string( ).\nENDLOOP.\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/s4hana/abap-objects/code/classes/zcl_abap_vehicle_v3"},"Klasse ZCL_ABAP_VEHICLE (v3)")))}b.isMDXComponent=!0}}]);