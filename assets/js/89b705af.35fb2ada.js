"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[9471],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>_});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),_=a,b=d["".concat(p,".").concat(_)]||d[_]||f[_]||i;return t?r.createElement(b,o(o({ref:n},c),{},{components:t})):r.createElement(b,o({ref:n},c))}));function _(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1010:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const i={title:"ABAP-Programm ZABAP_DEMO_ABAP_12",description:"Interne Tabellen",sidebar_position:120},o=void 0,l={unversionedId:"abap/code/report_zabap_demo_abap_12",id:"abap/code/report_zabap_demo_abap_12",title:"ABAP-Programm ZABAP_DEMO_ABAP_12",description:"Interne Tabellen",source:"@site/docs/abap/code/report_zabap_demo_abap_12.md",sourceDirName:"abap/code",slug:"/abap/code/report_zabap_demo_abap_12",permalink:"/s4hana/docs/abap/code/report_zabap_demo_abap_12",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap/code/report_zabap_demo_abap_12.md",tags:[],version:"current",sidebarPosition:120,frontMatter:{title:"ABAP-Programm ZABAP_DEMO_ABAP_12",description:"Interne Tabellen",sidebar_position:120},sidebar:"abapSidebar",previous:{title:"ABAP-Programm ZABAP_DEMO_ABAP_11",permalink:"/s4hana/docs/abap/code/report_zabap_demo_abap_11"},next:{title:"ABAP-Programm ZABAP_DEMO_ABAP_13",permalink:"/s4hana/docs/abap/code/report_zabap_demo_abap_13"}},p={},s=[],c={toc:s};function f(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap"},"REPORT zabap_demo_abap_12.\n\n*-------------------------------------------------------------------*\n* Deklaration interner Tabellen\n*-------------------------------------------------------------------*\nDATA flights TYPE TABLE OF zabap_flight.\nDATA flights2 TYPE zabap_flights.\nDATA flight TYPE zabap_flight.\nDATA flight2 TYPE REF TO zabap_flight.\n\n*-------------------------------------------------------------------*\n* Hinzuf\xfcgen von Datens\xe4tzen\n*-------------------------------------------------------------------*\nflights = VALUE #(\n  ( carrier_id = 'LH' connection_id = '0400' flight_date = sy-datlo )\n  ( carrier_id = 'LH' connection_id = '0401' flight_date = sy-datlo) ).\n\nflight-carrier_id = 'LH'.\nflight-connection_id = '0402'.\nflight-flight_date = sy-datlo.\n\nflights = VALUE #( BASE flights (flight ) ).\nAPPEND flight TO flights.\n\n*-------------------------------------------------------------------*\n* Lesen von Datens\xe4tzen\n*-------------------------------------------------------------------*\n* Lesen eines Einzelsatzes\nflight = flights[ 1 ].\nflight = flights[ carrier_id = 'LH' connection_id = '0400' flight_date = sy-datlo ].\n\n* Lesen mehrerer Datens\xe4tze\nLOOP AT flights INTO flight WHERE flight_date >= sy-datlo.\n  WRITE: / |{ flight-carrier_id } { flight-connection_id }|.\nENDLOOP.\n\n* Fehlerbehandlung bei Tabellenausdr\xfccken\nIF line_exists(flights[ 1 ] ).\n  flight = flights[ 1 ].\nENDIF.\n\n*-------------------------------------------------------------------*\n* \xc4ndern von Datens\xe4tzen\n*-------------------------------------------------------------------*\n* \xc4ndern eines Einzelsatzes\nflights[ 1 ]-price = 1000.\nflights[ carrier_id = 'LH' connection_id = '0400' flight_date = sy-datlo ]-price = 1000.\n\n* \xc4ndern mehrerer Datens\xe4tze\nLOOP AT flights REFERENCE INTO flight2.\n  flight2->price = 1000.\nENDLOOP.\n\n*-------------------------------------------------------------------*\n* Sortieren interner Tabellen\n*-------------------------------------------------------------------*\nSORT flights BY carrier_id ASCENDING connection_id DESCENDING flight_date ASCENDING.\n\n*-------------------------------------------------------------------*\n* L\xf6schen von Datens\xe4tzen\n*-------------------------------------------------------------------*\n* L\xf6schen eines Einzelsatzes\nDELETE flights INDEX 1.\n\n* L\xf6schen mehrerer Datens\xe4tze\nDELETE flights WHERE flight_date < sy-datlo.\n\n*-------------------------------------------------------------------*\n* Gr\xf6\xdfe von internen Tabellen\n*-------------------------------------------------------------------*\nDATA(number_of_flights) = lines(flights ).\nWRITE: / number_of_flights.\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/s4hana/docs/abap/code/structure_type_zabap_flight"},"Strukturtyp ZABAP_FLIGHT")))}f.isMDXComponent=!0}}]);