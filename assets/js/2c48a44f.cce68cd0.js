"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[7233],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},_=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),_=c(t),d=a,b=_["".concat(s,".").concat(d)]||_[d]||l[d]||o;return t?r.createElement(b,i(i({ref:n},u),{},{components:t})):r.createElement(b,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=_;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}_.displayName="MDXCreateElement"},8534:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={title:"ZABAP_DEMO_ABAP_03",description:"Arithmetische Operatoren und Funktionen"},i=void 0,p={unversionedId:"abap/code/reports/zabap_demo_abap_03",id:"abap/code/reports/zabap_demo_abap_03",title:"ZABAP_DEMO_ABAP_03",description:"Arithmetische Operatoren und Funktionen",source:"@site/docs/abap/code/reports/zabap_demo_abap_03.md",sourceDirName:"abap/code/reports",slug:"/abap/code/reports/zabap_demo_abap_03",permalink:"/s4hana/docs/abap/code/reports/zabap_demo_abap_03",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap/code/reports/zabap_demo_abap_03.md",tags:[],version:"current",frontMatter:{title:"ZABAP_DEMO_ABAP_03",description:"Arithmetische Operatoren und Funktionen"},sidebar:"abapSidebar",previous:{title:"ZABAP_DEMO_ABAP_02",permalink:"/s4hana/docs/abap/code/reports/zabap_demo_abap_02"},next:{title:"ZABAP_DEMO_ABAP_04",permalink:"/s4hana/docs/abap/code/reports/zabap_demo_abap_04"}},s={},c=[],u={toc:c};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap"},"* Arithmetic Operators and Functions\nREPORT zabap_demo_abap_03.\n\nDATA result_i TYPE i.\nDATA result_p TYPE p LENGTH 16 DECIMALS 2.\n\n*-------------------------------------------------------------------*\n* Mathematische Operatoren\n*-------------------------------------------------------------------*\n* Addition\nresult_i = 5 + 3.\nWRITE: / '5 + 3 = ', result_i.\n\n* Subtraktion\nresult_i = 5 - 3.\nWRITE: / '5 - 3 = ', result_i.\n\n* Multiplikation\nresult_i = 5 * 3.\nWRITE: / '5 * 3 = ', result_i.\n\n* Division\nresult_i = 5 / 3.\nWRITE: / '5 / 3 = ', result_i.\n\nresult_p = 5 / 3.\nWRITE: / '5 / 3 = ', result_p.\n\n* Ganzzahlige Division\nresult_i = 5 DIV 3.\nWRITE: / '5 DIV 3 = ', result_i.\n\nresult_i = 5 MOD 3.\nWRITE: / '5 MOD 3 = ', result_i.\n\n* Potenz\nresult_i = 5 ** 3.\nWRITE: / '5 ** 3 = ', result_i.\n\n* Inkrement/Dekrement\nresult_i = result_i + 1.\nWRITE: / result_i.\n\nADD 1 TO result_i.\nWRITE: / result_i.\n\n*-------------------------------------------------------------------*\n*Numerische Funktionen\n*-------------------------------------------------------------------*\n* Betrag\nresult_i = abs( -3 ).\nWRITE: / result_i.\n\n* Runden\nresult_p = round( val = '44.2875' dec = -1 ).\nWRITE: / result_p.\n")))}l.isMDXComponent=!0}}]);