"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[854],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return t?i.createElement(g,o(o({ref:n},p),{},{components:t})):i.createElement(g,o({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},775:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=t(7462),a=(t(7294),t(3905));const r={title:"12. Statische Aktionen implementieren",description:"",sidebar_position:120},o=void 0,s={unversionedId:"rap-cookbook/implement-static-actions",id:"rap-cookbook/implement-static-actions",title:"12. Statische Aktionen implementieren",description:"",source:"@site/docs/rap-cookbook/implement-static-actions.md",sourceDirName:"rap-cookbook",slug:"/rap-cookbook/implement-static-actions",permalink:"/s4hana/rap-cookbook/implement-static-actions",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/rap-cookbook/implement-static-actions.md",tags:[],version:"current",sidebarPosition:120,frontMatter:{title:"12. Statische Aktionen implementieren",description:"",sidebar_position:120},sidebar:"rapCookbookSidebar",previous:{title:"11. Sortierung implementieren",permalink:"/s4hana/rap-cookbook/implement-sorting"},next:{title:"13. Validierungen implementieren",permalink:"/s4hana/rap-cookbook/implement-validations"}},l={},c=[{value:"Message Class Z_TRAVEL",id:"message-class-z_travel",level:2},{value:"Nachrichtenklasse ZCM_TRAVEL",id:"nachrichtenklasse-zcm_travel",level:2},{value:"Behavior Definition ZR_TRAVEL",id:"behavior-definition-zr_travel",level:2},{value:"Verhaltensimplementierung ZBP_TRAVEL",id:"verhaltensimplementierung-zbp_travel",level:2},{value:"Global Class ZBP_TRAVEL",id:"global-class-zbp_travel",level:3},{value:"Local Type LHC_TRAVEL",id:"local-type-lhc_travel",level:3},{value:"Behavior Projection ZC_TRAVEL",id:"behavior-projection-zc_travel",level:2},{value:"Metadata Extension ZC_TRAVEL",id:"metadata-extension-zc_travel",level:2}],p={toc:c};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Message Class f\xfcr Reisen erstellen"),(0,a.kt)("li",{parentName:"ul"},"Nachrichtenklasse f\xfcr Reisen erstellen"),(0,a.kt)("li",{parentName:"ul"},"Behavior Definition f\xfcr Reisen um eine Aktion zum Anzeigen einer Nachricht erweitern"),(0,a.kt)("li",{parentName:"ul"},"Die Verhaltensimplementierung f\xfcr Reisen um eine Behandlermethode zum Anzeigen einer Nachricht erweitern"),(0,a.kt)("li",{parentName:"ul"},"Behavior Projection f\xfcr Reisen um eine Aktion zum Anzeigen einer Nachricht erweitern"),(0,a.kt)("li",{parentName:"ul"},"Metadata Extension f\xfcr Reisen um Annotationen f\xfcr eine Aktion zum Anzeigen einer Nachricht erweitern")),(0,a.kt)("h2",{id:"message-class-z_travel"},"Message Class Z_TRAVEL"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Nachrichtennummer"),(0,a.kt)("th",{parentName:"tr",align:null},"Nachricht"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"001"),(0,a.kt)("td",{parentName:"tr",align:null},"This is a Test Message from &1")))),(0,a.kt)("h2",{id:"nachrichtenklasse-zcm_travel"},"Nachrichtenklasse ZCM_TRAVEL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap",metastring:'title="ZCM_TRAVEL.abap" showLineNumbers',title:'"ZCM_TRAVEL.abap"',showLineNumbers:!0},"//highlight-start\nCLASS zcm_travel DEFINITION PUBLIC\n  INHERITING FROM cx_static_check FINAL CREATE PUBLIC.\n\n  PUBLIC SECTION.\n    \" Interfaces\n    INTERFACES if_abap_behv_message.\n    INTERFACES if_t100_message.\n    INTERFACES if_t100_dyn_msg.\n\n    \" Message Constants\n    CONSTANTS:\n      BEGIN OF test_message,\n        msgid TYPE symsgid      VALUE 'Z_TRAVEL',\n        msgno TYPE symsgno      VALUE '001',\n        attr1 TYPE scx_attrname VALUE 'USER_NAME',\n        attr2 TYPE scx_attrname VALUE '',\n        attr3 TYPE scx_attrname VALUE '',\n        attr4 TYPE scx_attrname VALUE '',\n      END OF test_message.\n\n    \" Attributs\n    DATA user_name TYPE syuname.\n\n    \" Constructor\n    METHODS constructor\n      IMPORTING\n        severity  TYPE if_abap_behv_message=>t_severity DEFAULT if_abap_behv_message=>severity-error\n        textid    LIKE if_t100_message=>t100key         DEFAULT if_t100_message=>default_textid\n        !previous LIKE previous                         OPTIONAL\n        user_name TYPE syuname                          OPTIONAL.\n\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\n\nENDCLASS.\n\nCLASS zcm_travel IMPLEMENTATION.\n  METHOD constructor ##ADT_SUPPRESS_GENERATION.\n    super->constructor( previous = previous ).\n\n    if_t100_message~t100key = textid.\n    if_abap_behv_message~m_severity = severity.\n    me->user_name = user_name.\n  ENDMETHOD.\nENDCLASS.\n//highlight-end\n")),(0,a.kt)("h2",{id:"behavior-definition-zr_travel"},"Behavior Definition ZR_TRAVEL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"managed implementation in class zbp_travel unique;\nstrict ( 2 );\n\ndefine behavior for ZR_Travel alias Travel\npersistent table z_travel_a\nlock master\nauthorization master ( instance )\n//etag master <field_name>\n{\n  create;\n  update;\n  delete;\n  association _Bookings { create; }\n\n//highlight-start\n  static action show_test_message;\n//highlight-end\n\n  field ( readonly, numbering : managed ) TravelUuid;\n\n  mapping for z_travel_a corresponding\n  {\n    AgencyId = agency_id;\n    BeginDate = begin_date;\n    BookingFee = booking_fee;\n    CreatedAt = created_at;\n    CreatedBy = created_by;\n    CurrencyCode = currency_code;\n    CustomerId = customer_id;\n    Description = description;\n    EndDate = end_date;\n    LastChangedAt = last_changed_at;\n    LastChangedBy = last_changed_by;\n    Status = status;\n    TotalPrice = total_price;\n    TravelId = travel_id;\n    TravelUuid = travel_uuid;\n  }\n}\n\ndefine behavior for ZR_Booking alias Booking\npersistent table z_booking_a\nlock dependent by _Travel\nauthorization dependent by _Travel\n//etag master <field_name>\n{\n  update;\n  delete;\n  field ( readonly ) TravelUuid;\n  association _Travel;\n\n  field ( readonly, numbering : managed ) BookingUuid;\n\n  mapping for z_booking_a corresponding\n  {\n    BookingDate = booking_Date;\n    BookingId = booking_id;\n    BookingUuid = booking_uuid;\n    CarrierId = carrier_id;\n    ConnectionId = connection_id;\n    CurrencyCode = currency_code;\n    FlightDate = flight_date;\n    FlightPrice = flight_price;\n    TravelUuid = Travel_uuid;\n  }\n}\n")),(0,a.kt)("h2",{id:"verhaltensimplementierung-zbp_travel"},"Verhaltensimplementierung ZBP_TRAVEL"),(0,a.kt)("h3",{id:"global-class-zbp_travel"},"Global Class ZBP_TRAVEL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap",metastring:'title="ZBP_TRAVEL.abap" showLineNumbers',title:'"ZBP_TRAVEL.abap"',showLineNumbers:!0},"CLASS zbp_travel DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF zr_travel.\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\nENDCLASS.\n\nCLASS zbp_travel IMPLEMENTATION.\nENDCLASS.\n")),(0,a.kt)("h3",{id:"local-type-lhc_travel"},"Local Type LHC_TRAVEL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap",metastring:'title="ZBP_TRAVEL.abap" shwoLineNumbers',title:'"ZBP_TRAVEL.abap"',shwoLineNumbers:!0},"CLASS lhc_travel DEFINITION INHERITING FROM cl_abap_behavior_handler.\n  PRIVATE SECTION.\n    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION\n      IMPORTING keys REQUEST requested_authorizations FOR Travel RESULT result.\n\n//highlight-start\n    METHODS show_test_message FOR MODIFY\n      IMPORTING keys FOR ACTION travel~show_message.\n//highlight-end\nENDCLASS.\n\nCLASS lhc_travel IMPLEMENTATION.\n  METHOD get_instance_authorizations.\n  ENDMETHOD.\n\n//highlight-start\n  METHOD show_test_message.\n    DATA message TYPE REF TO zcm_travel.\n\n    message = NEW zcm_travel( severity  = if_abap_behv_message=>severity-success\n                              textid    = zcm_travel=>test_message\n                              user_name = sy-uname ).\n\n    APPEND message TO reported-%other.\n  ENDMETHOD.\n//highlight-end\nENDCLASS.\n")),(0,a.kt)("h2",{id:"behavior-projection-zc_travel"},"Behavior Projection ZC_TRAVEL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"projection;\nstrict ( 2 );\n\ndefine behavior for ZC_Travel alias Travel\n{\n  use create;\n  use update;\n  use delete;\n\n  use association _Bookings { create; }\n\n//highlight-start\n  use action show_test_message as ShowTestMessage;\n//highlight-end\n}\n\ndefine behavior for ZC_Booking alias Booking\n{\n  use update;\n  use delete;\n\n  use association _Travel;\n}\n")),(0,a.kt)("h2",{id:"metadata-extension-zc_travel"},"Metadata Extension ZC_TRAVEL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"@Metadata.layer: #CUSTOMER\n@UI.headerInfo:\n{\n  typeNamePlural: 'Travels',\n  typeName: 'Travel',\n  title.value: 'TravelId',\n  description.value: 'Description'\n}\n@UI.presentationVariant: [{sortOrder: [{ by: 'BeginDate', direction: #DESC }]}]\nannotate view ZC_Travel with\n{\n\n  /* Facets */\n  @UI.facet:\n  [\n    { position: 10, targetQualifier: 'TravelDetails', label: 'Travel Details', type: #FIELDGROUP_REFERENCE },\n    { position: 20, targetQualifier: 'AdminData', label: 'Administrative Data', type: #FIELDGROUP_REFERENCE },\n    { position: 30, targetElement: '_Bookings', label: 'Bookings', type: #LINEITEM_REFERENCE }\n  ]\n\n//highlight-start\n  /* Actions */\n  @UI.lineItem: [{ position: 10, dataAction: 'ShowTestMessage', label: 'Show Test Message', type: #FOR_ACTION }]\n//highlight-end\n\n  /* Fields */\n  @UI.fieldGroup: [{ position: 10, qualifier: 'AdminData' }]\n  TravelUuid;\n\n  @UI.lineItem: [{ position: 10 }]\n  @UI.fieldGroup: [{ position: 10, qualifier: 'TravelDetails' }]\n  TravelId;\n\n  @UI.lineItem: [{ position: 20 }]\n  @UI.selectionField: [{ position: 10 }]\n  @UI.fieldGroup: [{ position: 20, qualifier: 'TravelDetails' }]\n  AgencyId;\n\n  @UI.lineItem: [{ position: 30 }]\n  @UI.selectionField: [{ position: 20 }]\n  @UI.fieldGroup: [{ position: 30, qualifier: 'TravelDetails' }]\n  CustomerId;\n\n  @UI.lineItem: [{ position: 40 }]\n  @UI.selectionField: [{ position: 30 }]\n  @UI.fieldGroup: [{ position: 40, qualifier: 'TravelDetails' }]\n  BeginDate;\n\n  @UI.lineItem: [{ position: 50 }]\n  @UI.selectionField: [{ position: 40 }]\n  @UI.fieldGroup: [{ position: 50, qualifier: 'TravelDetails' }]\n  EndDate;\n\n  @UI.fieldGroup: [{ position: 60, qualifier: 'TravelDetails' }]\n  BookingFee;\n\n  @UI.lineItem: [{ position: 60 }]\n  @UI.selectionField: [{ position: 50 }]\n  @UI.fieldGroup: [{ position: 70, qualifier: 'TravelDetails' }]\n  TotalPrice;\n\n  //  CurrencyCode;\n\n  @UI.lineItem: [{ position: 70, criticality: 'BeginDateCriticality', criticalityRepresentation: #WITHOUT_ICON }]\n  @UI.fieldGroup: [{ position: 80, qualifier: 'TravelDetails' }]\n  Description;\n\n  @UI.lineItem: [{ position: 80, criticality: 'StatusCriticality', criticalityRepresentation: #WITHOUT_ICON }]\n  @UI.selectionField: [{ position: 60 }]\n  @UI.fieldGroup: [{ position: 90, qualifier: 'TravelDetails', criticality: 'StatusCriticality', criticalityRepresentation: #WITHOUT_ICON }]\n  Status;\n\n  @UI.fieldGroup: [{ position: 20, qualifier: 'AdminData' }]\n  Createdby;\n\n  @UI.fieldGroup: [{ position: 30, qualifier: 'AdminData' }]\n  Createdat;\n\n  @UI.fieldGroup: [{ position: 40, qualifier: 'AdminData' }]\n  Lastchangedby;\n\n  @UI.fieldGroup: [{ position: 50, qualifier: 'AdminData' }]\n  Lastchangedat;\n\n}\n")))}m.isMDXComponent=!0}}]);