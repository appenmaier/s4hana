"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[8176],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>_});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},i=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),b=p(a),_=n,d=b["".concat(l,".").concat(_)]||b[_]||u[_]||c;return a?r.createElement(d,o(o({ref:t},i),{},{components:a})):r.createElement(d,o({ref:t},i))}));function _(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<c;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},3719:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const c={title:"Klasse ZCL_ABAP_TRUCK",description:""},o=void 0,s={unversionedId:"abap-objects/code/class_zcl_abap_truck",id:"abap-objects/code/class_zcl_abap_truck",title:"Klasse ZCL_ABAP_TRUCK",description:"",source:"@site/docs/abap-objects/code/class_zcl_abap_truck.md",sourceDirName:"abap-objects/code",slug:"/abap-objects/code/class_zcl_abap_truck",permalink:"/s4hana/docs/abap-objects/code/class_zcl_abap_truck",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-objects/code/class_zcl_abap_truck.md",tags:[],version:"current",frontMatter:{title:"Klasse ZCL_ABAP_TRUCK",description:""},sidebar:"abapObjectsSidebar",previous:{title:"Klasse ZCL_ABAP_RENTAL",permalink:"/s4hana/docs/abap-objects/code/class_zcl_abap_rental"},next:{title:"Klasse ZCL_ABAP_VEHICLE (v1)",permalink:"/s4hana/docs/abap-objects/code/class_zcl_abap_vehicle_v1"}},l={},p=[],i={toc:p};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-abap"},"CLASS zcl_abap_truck DEFINITION PUBLIC FINAL CREATE PUBLIC INHERITING FROM zcl_abap_vehicle.\n\n  PUBLIC SECTION.\n    METHODS constructor\n      IMPORTING\n        i_make  TYPE string\n        i_model TYPE string\n        i_cargo TYPE i\n      RAISING\n        zcx_abap_initial_parameter.\n\n    METHODS to_string REDEFINITION.\n\n    METHODS get_cargo\n      RETURNING VALUE(r_cargo) TYPE i.\n\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\n    DATA cargo TYPE i.\n\nENDCLASS.\n\nCLASS zcl_abap_truck IMPLEMENTATION.\n\n  METHOD constructor.\n    super->constructor( make = i_make model = i_model ).\n    cargo = cargo.\n  ENDMETHOD.\n\n  METHOD get_cargo.\n    r_cargo = cargo.\n  ENDMETHOD.\n\n  METHOD to_string.\n    r_string = |{ get_make( ) } { get_model( ) } ({ cargo }kg Frachtkapazit\xe4t)|.\n  ENDMETHOD.\n\nENDCLASS.\n")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/s4hana/docs/abap-objects/code/class_zcl_abap_vehicle_v4"},"Klasse ZCL_ABAP_VEHICLE (v4)")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/s4hana/docs/abap-objects/code/class_zcx_abap_initial_parameter"},"Ausnahmeklasse ZCX_ABAP_INITIAL_PARAMETER")))}u.isMDXComponent=!0}}]);