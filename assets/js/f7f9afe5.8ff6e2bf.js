"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[1802],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=c(a),d=r,m=b["".concat(l,".").concat(d)]||b[d]||u[d]||s;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=b;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},2614:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const s={title:"\xdcbungsaufgabe ABAP-Objects-06",description:""},i=void 0,o={unversionedId:"abap-objects/exercises/abap-objects-06",id:"abap-objects/exercises/abap-objects-06",title:"\xdcbungsaufgabe ABAP-Objects-06",description:"",source:"@site/docs/abap-objects/exercises/abap-objects-06.md",sourceDirName:"abap-objects/exercises",slug:"/abap-objects/exercises/abap-objects-06",permalink:"/s4hana/abap-objects/exercises/abap-objects-06",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-objects/exercises/abap-objects-06.md",tags:[],version:"current",frontMatter:{title:"\xdcbungsaufgabe ABAP-Objects-06",description:""},sidebar:"abapObjectsSidebar",previous:{title:"\xdcbungsaufgabe ABAP-Objects-05",permalink:"/s4hana/abap-objects/exercises/abap-objects-05"},next:{title:"\xdcbungsaufgabe ABAP-Objects-07",permalink:"/s4hana/abap-objects/exercises/abap-objects-07"}},l={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse <code>ZCL_???_CARGO_PLANE</code> und zur Klasse <code>ZCL_???_PASSENGER_PLANE</code>",id:"hinweise-zur-klasse-zcl__cargo_plane-und-zur-klasse-zcl__passenger_plane",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Erstelle die Klassen ",(0,r.kt)("inlineCode",{parentName:"li"},"ZCL_???_PASSENGER_PLANE")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"ZCL_???_CARGO_PLANE")," anhand des abgebildeten Klassendiagramms"),(0,r.kt)("li",{parentName:"ol"},"Passe das ABAP-Programm ",(0,r.kt)("inlineCode",{parentName:"li"},"Z???_ABAP_OBJECTS_AIRPLANES")," so an, dass statt gew\xf6hnlichen Flugzeugen Passagier- und Frachtflugzeuge erzeugt werden")),(0,r.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/194851408-4d437c64-b3bf-4a2d-b237-ba50e56aeda4.png",alt:"image"})),(0,r.kt)("h2",{id:"hinweise-zur-klasse-zcl__cargo_plane-und-zur-klasse-zcl__passenger_plane"},"Hinweise zur Klasse ",(0,r.kt)("inlineCode",{parentName:"h2"},"ZCL_???_CARGO_PLANE")," und zur Klasse ",(0,r.kt)("inlineCode",{parentName:"h2"},"ZCL_???_PASSENGER_PLANE")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"TO_STRING()")," soll alle Instanzattribute zu einer Zeichenkette zusammenfassen und diese zur\xfcckgeben")))}u.isMDXComponent=!0}}]);