"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[2984],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>u});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=t.createContext({}),d=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},l=function(e){var n=d(e.components);return t.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},_=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),_=d(r),u=i,E=_["".concat(p,".").concat(u)]||_[u]||s[u]||a;return r?t.createElement(E,o(o({ref:n},l),{},{components:r})):t.createElement(E,o({ref:n},l))}));function u(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=_;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var d=2;d<a;d++)o[d]=r[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}_.displayName="MDXCreateElement"},903:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=r(7462),i=(r(7294),r(3905));const a={title:"Demo 9",description:"",sidebar_position:90},o=void 0,c={unversionedId:"abap/code/demo09",id:"abap/code/demo09",title:"Demo 9",description:"",source:"@site/docs/abap/code/demo09.md",sourceDirName:"abap/code",slug:"/abap/code/demo09",permalink:"/s4hana/docs/abap/code/demo09",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap/code/demo09.md",tags:[],version:"current",sidebarPosition:90,frontMatter:{title:"Demo 9",description:"",sidebar_position:90},sidebar:"abapSidebar",previous:{title:"Demo 8",permalink:"/s4hana/docs/abap/code/demo08"},next:{title:"Demo 10",permalink:"/s4hana/docs/abap/code/demo10"}},p={},d=[],l={toc:d};function s(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap"},"FUNCTION Z_ABAP_SET_CONNECTION\n  IMPORTING\n    I_CARRIER_ID TYPE S_CARR_ID\n    I_CONNECTION_ID TYPE S_CONN_ID\n  EXCEPTIONS\n    INITIAL_CARRIER_ID\n    INITIAL_CONNECTION_ID.\n\n\n\n* Eingabepr\xfcfung\n  IF i_carrier_id IS INITIAL.\n    RAISE initial_carrier_id.\n  ENDIF.\n\n  IF i_connection_id IS INITIAL.\n    RAISE initial_connection_id.\n  ENDIF.\n\n  g_carrier_id = i_carrier_id.\n  g_connection_id = i_connection_id.\n\nENDFUNCTION.\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap"},"REPORT zabap_demo_abap_09.\n\nPARAMETERS p_carrid TYPE s_carr_id DEFAULT 'LH'.\nPARAMETERS p_connid TYPE s_conn_id DEFAULT '0400'.\n\nDATA carrier_id TYPE s_carr_id.\nDATA connection_id TYPE s_conn_id.\n\nCALL FUNCTION 'Z_ABAP_SET_CONNECTION'\n  EXPORTING\n    i_carrier_id          = p_carrid\n    i_connection_id       = p_connid\n  EXCEPTIONS\n    initial_carrier_id    = 1\n    initial_connection_id = 2\n    OTHERS                = 3.\nIF sy-subrc <> 0.\n  CASE sy-subrc.\n    WHEN 1.\n      WRITE: |Error: initial carrier id|.\n    WHEN 2.\n      WRITE: |Error: initial connection id|.\n    WHEN OTHERS.\n      WRITE: |Internal Error|.\n  ENDCASE.\nENDIF.\n\nCLEAR: p_carrid, p_connid.\n\nCALL FUNCTION 'Z_ABAP_GET_CONNECTION'\n  IMPORTING\n    e_carrier_id    = carrier_id\n    e_connection_id = connection_id.\n\nWRITE: / carrier_id, connection_id.\n")))}s.isMDXComponent=!0}}]);