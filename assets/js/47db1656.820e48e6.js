"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[7307],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,b=m["".concat(i,".").concat(u)]||m[u]||l[u]||o;return n?a.createElement(b,c(c({ref:t},d),{},{components:n})):a.createElement(b,c({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var p=2;p<o;p++)c[p]=n[p];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1023:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={title:"ZABAP_Demo07",description:"Aggregationen"},c=void 0,s={unversionedId:"abap-cds/code/cds-views/zabap_demo07",id:"abap-cds/code/cds-views/zabap_demo07",title:"ZABAP_Demo07",description:"Aggregationen",source:"@site/docs/abap-cds/code/cds-views/zabap_demo07.md",sourceDirName:"abap-cds/code/cds-views",slug:"/abap-cds/code/cds-views/zabap_demo07",permalink:"/s4hana/abap-cds/code/cds-views/zabap_demo07",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-cds/code/cds-views/zabap_demo07.md",tags:[],version:"current",frontMatter:{title:"ZABAP_Demo07",description:"Aggregationen"},sidebar:"abapCDSSidebar",previous:{title:"ZABAP_Demo06",permalink:"/s4hana/abap-cds/code/cds-views/zabap_demo06"},next:{title:"ZABAP_Demo08",permalink:"/s4hana/abap-cds/code/cds-views/zabap_demo08"}},i={},p=[],d={toc:p};function l(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"@AbapCatalog.sqlViewName: 'ZABAPDEMO07'\n@AbapCatalog.compiler.compareFilter: true\n@AbapCatalog.preserveKey: true\n@AccessControl.authorizationCheck: #CHECK\n@EndUserText.label: 'Demo 7: Aggregations'\ndefine view ZABAP_Demo07\n  as select from sflight\n{\n  carrid                                               as CarrierId,\n  connid                                               as ConnectionId,\n  count(*)                                             as NumberOfFlights,\n  count(distinct planetype)                            as NumberOfDifferentPlanetypes,\n  sum(seatsocc)                                        as TotalOccupiedSeats,\n  sum(paymentsum)                                      as TotalPaymentsum,\n  avg(price as abap.dec(16,2))                         as AveragePrice,\n  min(seatsocc)                                        as MinimumOccupiedSeats,\n  max(seatsocc)                                        as MaximumOccupiedSeats,\n  sum(case when seatsocc = seatsmax then 1 else 0 end) as NumberOfBookedUpFlights,\n  sum(case when seatsocc = 0 then 1 else 0 end)        as NumberOfEmptyFlights\n}\nwhere\n  price < 1000\ngroup by\n  carrid,\n  connid\nhaving\n  sum( paymentsum ) > 4500000\n")))}l.isMDXComponent=!0}}]);