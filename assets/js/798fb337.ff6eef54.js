"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[4569],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,f=u["".concat(s,".").concat(m)]||u[m]||l[m]||a;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8289:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={title:"Assoziationen",description:"",sidebar_position:80,tags:[]},i=void 0,c={unversionedId:"documentation/abap-cds/associations",id:"documentation/abap-cds/associations",title:"Assoziationen",description:"",source:"@site/docs/documentation/abap-cds/associations.md",sourceDirName:"documentation/abap-cds",slug:"/documentation/abap-cds/associations",permalink:"/s4hana/documentation/abap-cds/associations",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/abap-cds/associations.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{title:"Assoziationen",description:"",sidebar_position:80,tags:[]},sidebar:"documentationSidebar",previous:{title:"Aggregatfunktionen",permalink:"/s4hana/documentation/abap-cds/aggregat-functions"},next:{title:"Zugriffskontrollen",permalink:"/s4hana/documentation/abap-cds/access-controls"}},s={},p=[],d={toc:p};function l(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"TODO",type:"danger"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"@AccessControl.authorizationCheck: #CHECK\n@EndUserText.label: 'Connection'\ndefine view entity Connection\n  as select from /dmo/connection as Connection\n  association [0..*] to /dmo/flight as _Flights on  Connection.carrier_id = _Flights.carrier_id\n                                                and Connection.connection_id = _Flights.connection_id\n  association [1..1] to /dmo/carrier as _Carrier on  Connection.carrier_id = _Carrier.carrier_id\n{\n  key Connection.carrier_id    as CarrierId,\n  key Connection.connection_id as ConnectionId,\n      airport_from_id          as AirportFromId,\n      airport_to_id            as AirportToId,\n\n      /* Associations */\n      _Flights,\n      _Carrier\n}\n")))}l.isMDXComponent=!0}}]);