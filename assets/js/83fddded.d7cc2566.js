"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[1217],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4578:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={title:"Fallunterscheidungen",description:"",sidebar_position:20,tags:[]},i=void 0,c={unversionedId:"documentation/abap-cds/cases",id:"documentation/abap-cds/cases",title:"Fallunterscheidungen",description:"",source:"@site/docs/documentation/abap-cds/cases.md",sourceDirName:"documentation/abap-cds",slug:"/documentation/abap-cds/cases",permalink:"/s4hana/documentation/abap-cds/cases",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/abap-cds/cases.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Fallunterscheidungen",description:"",sidebar_position:20,tags:[]},sidebar:"documentationSidebar",previous:{title:"ABAP CDS Views",permalink:"/s4hana/documentation/abap-cds/abap-cds-views"},next:{title:"Arithmetische Ausdr\xfccke",permalink:"/s4hana/documentation/abap-cds/arithmetic-expressions"}},s={},l=[],p={toc:l};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Die ABAP CDS kennen einfache Fallunterscheidungen mit ",(0,a.kt)("inlineCode",{parentName:"p"},"case...when...then...end")," (vergleichbar mit dem ABAP-Konstrukt ",(0,a.kt)("inlineCode",{parentName:"p"},"CASE...WHEN...ENDCASE"),") sowie komplexe\nFallunterscheidungen mit ",(0,a.kt)("inlineCode",{parentName:"p"},"case when...then...end")," (vergleichbar mit dem ABAP-Konstrukt ",(0,a.kt)("inlineCode",{parentName:"p"},"IF...ELSE...ENDIF"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"@AccessControl.authorizationCheck: #CHECK\n@EndUserText.label: 'Flight'\ndefine view entity I_Flight\n  as select from /dmo/flight\n{\n  key carrier_id    as CarrierId,\n  key connection_id as ConnectionId,\n  key flight_date   as FlightDate,\n      price         as Price,\n      currency_code as CurrencyCode,\n      case currency_code\n        when 'EUR' then 'Euro'\n        when 'USD' then 'US Dollar'\n        else currency_code\n      end           as CurrencyCodeText,\n      case when currency_code = 'EUR' and price < 500 then 'Low'\n           when currency_code = 'EUR' and price >= 500 then 'High'\n           else ''\n      end           as PriceCategory\n}\n")))}d.isMDXComponent=!0}}]);