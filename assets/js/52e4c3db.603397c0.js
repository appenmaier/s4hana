"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[6071],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},_=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),_=c(t),d=r,g=_["".concat(l,".").concat(d)]||_[d]||m[d]||o;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=_;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}_.displayName="MDXCreateElement"},9580:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={title:"Aktionen implementieren",description:"",sidebar_position:130},i=void 0,s={unversionedId:"rap/cookbook/implement-actions",id:"rap/cookbook/implement-actions",title:"Aktionen implementieren",description:"",source:"@site/docs/rap/cookbook/implement-actions.md",sourceDirName:"rap/cookbook",slug:"/rap/cookbook/implement-actions",permalink:"/s4hana/rap/cookbook/implement-actions",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/rap/cookbook/implement-actions.md",tags:[],version:"current",sidebarPosition:130,frontMatter:{title:"Aktionen implementieren",description:"",sidebar_position:130},sidebar:"rapSidebar",previous:{title:"Aktionen festlegen",permalink:"/s4hana/rap/cookbook/define-actions"}},l={},c=[{value:"Message Class Z_TRAVEL",id:"message-class-z_travel",level:2},{value:"ABAP Class ZCM_TRAVEL",id:"abap-class-zcm_travel",level:2},{value:"ABAP Class BP_I_TRAVEL - Local Type LHC_I_BOOKING - Method CANCEL_BOOKING",id:"abap-class-bp_i_travel---local-type-lhc_i_booking---method-cancel_booking",level:2}],p={toc:c};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"TODO",type:"danger"}),(0,r.kt)("h2",{id:"message-class-z_travel"},"Message Class Z_TRAVEL"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Nachrichtennummer"),(0,r.kt)("th",{parentName:"tr",align:null},"Nachricht"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"000"),(0,r.kt)("td",{parentName:"tr",align:null},"Booking with ID &1 is already cancelled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"001"),(0,r.kt)("td",{parentName:"tr",align:null},"Booking with ID &1 successfully cancelled")))),(0,r.kt)("h2",{id:"abap-class-zcm_travel"},"ABAP Class ZCM_TRAVEL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-abap"},"CLASS zcm_travel DEFINITION\n  PUBLIC\n  INHERITING FROM cx_static_check\n  FINAL\n  CREATE PUBLIC .\n\n  PUBLIC SECTION.\n\n    \"Interfaces\n    INTERFACES if_abap_behv_message.\n    INTERFACES if_t100_message.\n    INTERFACES if_t100_dyn_msg.\n\n    \"Message Constants\n    CONSTANTS:\n      BEGIN OF booking_already_cancelled,\n        msgid TYPE symsgid VALUE 'Z_TRAVEL',\n        msgno TYPE symsgno VALUE '000',\n        attr1 TYPE scx_attrname VALUE 'BOOKING_ID',\n        attr2 TYPE scx_attrname VALUE '',\n        attr3 TYPE scx_attrname VALUE '',\n        attr4 TYPE scx_attrname VALUE '',\n      END OF booking_already_cancelled.\n\n    CONSTANTS:\n      BEGIN OF booking_cancelled_successfully,\n        msgid TYPE symsgid VALUE 'Z_TRAVEL',\n        msgno TYPE symsgno VALUE '001',\n        attr1 TYPE scx_attrname VALUE 'BOOKING_ID',\n        attr2 TYPE scx_attrname VALUE '',\n        attr3 TYPE scx_attrname VALUE '',\n        attr4 TYPE scx_attrname VALUE '',\n      END OF booking_cancelled.\n    \n    \"Attributs\n    DATA booking_id TYPE /dmo/booking_id.\n\n    \"Constructor\n    METHODS constructor\n      IMPORTING\n        severity   TYPE if_abap_behv_message=>t_severity DEFAULT if_abap_behv_message=>severity-error\n        textid     LIKE if_t100_message=>t100key DEFAULT if_t100_message=>default_textid\n        previous   LIKE previous OPTIONAL\n        booking_id TYPE /dmo/booking_id OPTIONAL.\n\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\n\nENDCLASS.\n\nCLASS zcm_travel IMPLEMENTATION.\n\n  METHOD constructor ##ADT_SUPPRESS_GENERATION.\n    super->constructor( previous = previous ).\n\n    if_t100_message~t100key = textid.\n    me->if_abap_behv_message~m_severity = severity.\n    me->booking_id = booking_id.\n  ENDMETHOD.\n\nENDCLASS.\n")),(0,r.kt)("h2",{id:"abap-class-bp_i_travel---local-type-lhc_i_booking---method-cancel_booking"},"ABAP Class BP_I_TRAVEL - Local Type LHC_I_BOOKING - Method CANCEL_BOOKING"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-abap"},'METHOD cancel_booking.\n\n  " Deklarationen\n  DATA message TYPE REF TO zcm_travel.\n\n  " Buchungen lesen\n  READ ENTITY IN LOCAL MODE ZI_Booking\n    FIELDS ( BookingId Status )\n    WITH CORRESPONDING #( keys )\n    RESULT DATA(bookings).\n\n  " Buchungen sequentiell verarbeiten\n  LOOP AT bookings INTO DATA(booking).\n\n    " Fehler abfangen und Fehlermeldung erzeugen\n    IF booking-Status = \'X\'.\n      message = NEW zcm_travel( severity = if_abap_behv_message=>severity-error\n                                textid = zcm_dap_booking=>booking_already_cancelled\n                                booking_id = booking-BookingId ).\n      APPEND message TO reported-%other.\n      APPEND CORRESPONDING #( booking ) TO failed-zi_booking.\n      CONTINUE.\n    ENDIF.\n\n   " Status \xe4ndern, Status zur\xfcckschreiben und Erfolgsmeldung erzeugen\n    MODIFY ENTITY IN LOCAL MODE ZI_Booking\n      UPDATE FIELDS ( status )\n      WITH VALUE #( ( %tky = booking-%tky Status = \'X\' ) ).\n\n    message = NEW zcm_travel( severity = if_abap_behv_message=>severity-success\n                              textid = zcm_dap_booking=>booking_cancelled_successfully\n                              booking_id = booking-BookingId ).\n    APPEND message TO reported-%other.\n      \n  ENDLOOP.\n\nENDMETHOD.\n')))}m.isMDXComponent=!0}}]);