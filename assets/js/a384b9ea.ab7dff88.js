"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[7149],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=i,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const a={title:"Architektur einer RAP-Anwendung",description:"",sidebar_position:10,tags:[]},o=void 0,c={unversionedId:"documentation/rap/architecture",id:"documentation/rap/architecture",title:"Architektur einer RAP-Anwendung",description:"",source:"@site/docs/documentation/rap/architecture.md",sourceDirName:"documentation/rap",slug:"/documentation/rap/architecture",permalink:"/s4hana/documentation/rap/architecture",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/rap/architecture.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Architektur einer RAP-Anwendung",description:"",sidebar_position:10,tags:[]},sidebar:"documentationSidebar",previous:{title:"RAP",permalink:"/s4hana/documentation/rap/"},next:{title:"RAP Business Objects (RAP BOs)",permalink:"/s4hana/documentation/rap/rap-bos"}},l={},s=[],u={toc:s};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Die Architektur einer RAP-Anwendung umfasst die nachfolgenden Bereiche:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Datenmodellierung und Verhalten")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"RAP Business Objects")," (RAP BOs) legen das Datenmodell f\xfcr transaktionale Anwendungen fest und beinhalten neben den Daten auch die datenbezogene Logik, also das Verhalten"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"CDS Entities")," erm\xf6glichen die Definition von nicht-transaktionalen Datenmodellen, die f\xfcr Abfragen verwendet werden k\xf6nnen")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Service-Bereitstellung")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"BO Projections")," und ",(0,i.kt)("em",{parentName:"li"},"BO Interfaces")," erm\xf6glichen die Definition spezifischer Gesch\xe4ftsservices bzw. Interfaces"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Service Definitions")," legen den Umfang eines Gesch\xe4ftsservices fest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Service Bindings")," legen das Kommunikationsprotokoll (OData v2 oder OData v4) sowie die Art des Gesch\xe4ftsservices (UI, Web API oder Event) fest")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Service-Verwendung")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"SAP Fiori UIs")," stellen Oberfl\xe4chen f\xfcr h\xe4ufig verwendete Anwendungsmuster bereit"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Web APIs")," bieten eine \xf6ffentliche Schnittstelle f\xfcr den Zugriff auf die Gesch\xe4ftsservices"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Events")," erm\xf6glichen das asynchrone Konsumieren von RAP BOs")),(0,i.kt)("mermaid",{value:"flowchart LR\n   binding ---\x3e api\n   binding ---\x3e ui\n   binding ---\x3e event\n   definition ---\x3e binding\n   projection ---\x3e definition\n   interface ---\x3e definition\n   bo ---\x3e projection\n   bo ---\x3e interface\n   entity --\x3e definition\n   subgraph Service-Verwendung\n      ui(SAP Fiori UI)\n      api(Web API)\n      event(Event)\n   end\n   subgraph Service-Bereitstellung\n      binding(Service Binding)\n      definition(Service Defintion)\n      projection(BO Projection)\n      interface(Interface)\n   end\n   subgraph Datenmodellierung&#160und&#160Verhalten\n      bo(RAP BO)\n      entity(CDS Entity)\n   end"}))}p.isMDXComponent=!0}}]);