"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[2290],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>m});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,_=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return r?t.createElement(_,i(i({ref:n},u),{},{components:r})):t.createElement(_,i({ref:n},u))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7613:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var t=r(7462),a=(r(7294),r(3905));const o={title:"ABAP-Programm ZABAP_DEMO_ABAP_03",description:"Mathematische Operatoren und Funktionen",sidebar_position:30},i=void 0,p={unversionedId:"abap/code/report_demo_03",id:"abap/code/report_demo_03",title:"ABAP-Programm ZABAP_DEMO_ABAP_03",description:"Mathematische Operatoren und Funktionen",source:"@site/docs/abap/code/report_demo_03.md",sourceDirName:"abap/code",slug:"/abap/code/report_demo_03",permalink:"/s4hana/docs/abap/code/report_demo_03",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap/code/report_demo_03.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"ABAP-Programm ZABAP_DEMO_ABAP_03",description:"Mathematische Operatoren und Funktionen",sidebar_position:30},sidebar:"abapSidebar",previous:{title:"ABAP-Programm ZABAP_DEMO_ABAP_02",permalink:"/s4hana/docs/abap/code/report_demo_02"},next:{title:"ABAP-Programm ZABAP_DEMO_ABAP_04",permalink:"/s4hana/docs/abap/code/report_demo_04"}},s={},l=[],u={toc:l};function c(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap"},"REPORT zabap_demo_abap_03.\n\nDATA result_i TYPE i.\nDATA result_p TYPE p LENGTH 16 DECIMALS 2.\n\n*-------------------------------------------------------------------*\n* Mathematische Operatoren\n*-------------------------------------------------------------------*\n* Addition\nresult_i = 5 + 3.\nWRITE: / '5 + 3 = ', result_i.\n\n* Subtraktion\nresult_i = 5 - 3.\nWRITE: / '5 - 3 = ', result_i.\n\n* Multiplikation\nresult_i = 5 * 3.\nWRITE: / '5 * 3 = ', result_i.\n\n* Division\nresult_i = 5 / 3.\nWRITE: / '5 / 3 = ', result_i.\n\nresult_p = 5 / 3.\nWRITE: / '5 / 3 = ', result_p.\n\n* Ganzzahlige Division\nresult_i = 5 DIV 3.\nWRITE: / '5 DIV 3 = ', result_i.\n\nresult_i = 5 MOD 3.\nWRITE: / '5 MOD 3 = ', result_i.\n\n* Potenz\nresult_i = 5 ** 3.\nWRITE: / '5 ** 3 = ', result_i.\n\n* Inkrement/Dekrement\nresult_i = result_i + 1.\nWRITE: / result_i.\n\nADD 1 TO result_i.\nWRITE: / result_i.\n\n*-------------------------------------------------------------------*\n*Numerische Funktionen\n*-------------------------------------------------------------------*\n* Betrag\nresult_i = abs( -3 ).\nWRITE: / result_i.\n\n* Runden\nresult_p = round( val = '44.2875' dec = -1 ).\nWRITE: / result_p.\n")))}c.isMDXComponent=!0}}]);