"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[8166],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(f,s(s({ref:t},l),{},{components:n})):a.createElement(f,s({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Arithmetische Ausdr\xfccke",description:"",sidebar_position:40,tags:[]},s=void 0,o={unversionedId:"abap-cds/documentation/arithmetic-expressions",id:"abap-cds/documentation/arithmetic-expressions",title:"Arithmetische Ausdr\xfccke",description:"",source:"@site/docs/abap-cds/documentation/arithmetic-expressions.md",sourceDirName:"abap-cds/documentation",slug:"/abap-cds/documentation/arithmetic-expressions",permalink:"/s4hana/abap-cds/documentation/arithmetic-expressions",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-cds/documentation/arithmetic-expressions.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{title:"Arithmetische Ausdr\xfccke",description:"",sidebar_position:40,tags:[]},sidebar:"abapCDSSidebar",previous:{title:"Fallunterscheidungen",permalink:"/s4hana/abap-cds/documentation/cases"},next:{title:"Aggregatfunktionen",permalink:"/s4hana/abap-cds/documentation/aggregat-functions"}},c={},p=[],l={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"F\xfcr arithmetische Ausdr\xfccke k\xf6nnen in den ABAP CDS die Operatoren ",(0,r.kt)("inlineCode",{parentName:"p"},"+"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"-"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," und ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," verwendet werden."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"@AbapCatalog.sqlViewName: 'ABAPCDSVIEW'\n@AbapCatalog.compiler.compareFilter: true\n@AbapCatalog.preserveKey: true\n@AccessControl.authorizationCheck: #CHECK\n@EndUserText.label: 'ABAP CDS View'\ndefine view AbapCdsView\n  as select from sflight\n{\n  seatsmax                                                              as MaxSeatsEconomy,\n  seatsocc                                                              as OccupiedSeatsEconomy,\n  seatsmax - seatsocc                                                   as FreeSeatsEconomy,\n  seatsmax_b                                                            as MaxSeatsBusiness,\n  seatsmax_f                                                            as MaxSeatsFirst,\n  seatsmax + seatsmax_b + seatsmax_f                                    as MaxSeatsTotal,\n  price                                                                 as OldPrice,\n  price * 2                                                             as DoublePrice,\n  cast(price as abap.fltp) * 1.1                                        as NewPrice,\n  ( cast(seatsocc as abap.fltp) / cast(seatsmax as abap.fltp) ) * 100.0 as OccupancyRate,\n}\n")),(0,r.kt)("admonition",{title:"Hinweis",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Da der Divisionsoperator ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," nur Gleitkommazahlen unterst\xfctzt, muss gegebenenfalls eine Typumwandlung mit Hilfe der cast-Operation erfolgen.")))}m.isMDXComponent=!0}}]);