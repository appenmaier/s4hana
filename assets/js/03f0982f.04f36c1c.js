"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[3353],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>f});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),f=i,b=u["".concat(s,".").concat(f)]||u[f]||p[f]||o;return r?t.createElement(b,a(a({ref:n},d),{},{components:r})):t.createElement(b,a({ref:n},d))}));function f(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},392:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=r(7462),i=(r(7294),r(3905));const o={title:"Verhalten festlegen",description:"",sidebar_position:70},a=void 0,l={unversionedId:"rap/cookbook/define-behavior",id:"rap/cookbook/define-behavior",title:"Verhalten festlegen",description:"",source:"@site/docs/rap/cookbook/define-behavior.md",sourceDirName:"rap/cookbook",slug:"/rap/cookbook/define-behavior",permalink:"/s4hana/rap/cookbook/define-behavior",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/rap/cookbook/define-behavior.md",tags:[],version:"current",sidebarPosition:70,frontMatter:{title:"Verhalten festlegen",description:"",sidebar_position:70},sidebar:"rapSidebar",previous:{title:"Oberfl\xe4che erweitern",permalink:"/s4hana/rap/cookbook/extend-ui"},next:{title:"Wertehilfen implementieren",permalink:"/s4hana/rap/cookbook/implement-value-helps"}},s={},c=[{value:"Behavior Definition ZR_TRAVEL",id:"behavior-definition-zr_travel",level:2},{value:"Behavior Definition ZC_TRAVEL",id:"behavior-definition-zc_travel",level:2}],d={toc:c};function p(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Um das (transaktionale) Verhalten des Gesch\xe4ftsobjektes festzulegen, wird einen Behavior Definition f\xfcr die Interface View der Reisedaten erstellt. In dieser wird festgelegt, welche CUD-Methoden unterst\xfctzt werden sollen. Anschlie\xdfend wird darauf aufbauend eine Behavior Definition f\xfcr die Projection View der Reisen erstellt. In dieser wird festgelegt, welches Verhalten der Gesch\xe4ftsservice bereitstellen soll."),(0,i.kt)("h2",{id:"behavior-definition-zr_travel"},"Behavior Definition ZR_TRAVEL"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"managed implementation in class zbp_r_travel unique;\nstrict ( 2 );\n\ndefine behavior for ZR_Travel alias Travel\npersistent table zatravel\nlock master\nauthorization master ( instance )\n//etag master <field_name>\n{\n  create;\n  update;\n  delete;\n  association _Bookings { create; }\n\n  field ( readonly, numbering : managed ) TravelUuid;\n\n  mapping for zatravel corresponding\n  {\n    BeginDate = begin_date;\n    CurrencyCode = currency_code;\n    CustomerId = customer_id;\n    Description = description;\n    EndDate = end_date;\n    TotalPrice = total_price;\n    TravelId = travel_id;\n    TravelUuid = travel_uuid;\n  }\n}\n\ndefine behavior for ZR_Booking alias Booking\npersistent table zabooking\nlock dependent by _Travel\nauthorization dependent by _Travel\n//etag master <field_name>\n{\n  update;\n  delete;\n  field ( readonly ) TravelUuid;\n  association _Travel;\n\n  field ( readonly, numbering : managed ) BookingUuid;\n\n  mapping for zabooking corresponding\n  {\n    BookingDate = booking_Date;\n    BookingId = booking_id;\n    BookingUuid = booking_uuid;\n    CarrierId = carrier_id;\n    ConnectionId = connection_id;\n    CurrencyCode = currency_code;\n    FlightDate = flight_date;\n    FlightPrice = flight_price;\n    Status = status;\n    TravelUuid = Travel_uuid;\n  }\n}\n")),(0,i.kt)("h2",{id:"behavior-definition-zc_travel"},"Behavior Definition ZC_TRAVEL"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"projection;\nstrict ( 2 );\n\ndefine behavior for ZC_Travel alias Travel\n{\n  use create;\n  use update;\n  use delete;\n\n  use association _Bookings { create; }\n}\n\ndefine behavior for ZC_Booking alias Booking\n{\n  use update;\n  use delete;\n\n  use association _Travel;\n}\n")))}p.isMDXComponent=!0}}]);