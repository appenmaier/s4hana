"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[5302],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=i,k=d["".concat(u,".").concat(m)]||d[m]||l[m]||a;return t?r.createElement(k,o(o({ref:n},p),{},{components:t})):r.createElement(k,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5819:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const a={title:"Zeichenketten und Zeichenketten-Templates",description:"",sidebar_position:50,tags:[]},o=void 0,c={unversionedId:"abap/documentation/strings",id:"abap/documentation/strings",title:"Zeichenketten und Zeichenketten-Templates",description:"",source:"@site/docs/abap/documentation/strings.md",sourceDirName:"abap/documentation",slug:"/abap/documentation/strings",permalink:"/s4hana/abap/documentation/strings",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap/documentation/strings.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Zeichenketten und Zeichenketten-Templates",description:"",sidebar_position:50,tags:[]},sidebar:"abapSidebar",previous:{title:"Mathematische Operatoren und Funktionen",permalink:"/s4hana/abap/documentation/calculations"},next:{title:"Fallunterscheidungen",permalink:"/s4hana/abap/documentation/cases"}},u={},s=[],p={toc:s};function l(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Zeichenketten werden in ABAP durch den ABAP-Standardtyp ",(0,i.kt)("inlineCode",{parentName:"p"},"STRING")," sowie den einfachen Hochkommata realisiert. Zeichenketten-Templates erm\xf6glichen in ABAP die Verwendung von Ausdr\xfccken und Steuerzeichen in Zeichenketten und werden mit den Trennstrichen realisiert.\nSowohl Zeichenketten als auch Zeichenketten-Templates k\xf6nnen mit dem Verkettungsoperator ",(0,i.kt)("inlineCode",{parentName:"p"},"&&")," oder dem Zuweisungsoperator ",(0,i.kt)("inlineCode",{parentName:"p"},"&&=")," verkn\xfcpft werden."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap"},"DATA text TYPE string VALUE 'Winter'.\nDATA text2 TYPE string VALUE 'is'.\nDATA text3 TYPE string.\n\n* Verkn\xfcpfung mehrerer Zeichenketten\ntext3 = text && | | && text2.\ntext3 &&= | Coming|.\n\n* Verwenden eines Zeichenketten-Templates\ntext3 = |{ text } { text2 } Coming|.\n")),(0,i.kt)("admonition",{title:"Hinweis",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Schlie\xdfende Leerzeichen werden von Anweisungen zur Zeichenkettenverarbeitung in der Regel abgeschnitten.")),(0,i.kt)("p",null,"Die Anweisung ",(0,i.kt)("inlineCode",{parentName:"p"},"SPLIT")," erm\xf6glicht das Aufteilen einer Zeichenkette. F\xfcr weitere Operationen stehen eine Reihe eingebauter Funktionen zur Verf\xfcgung:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"L\xe4ngenfunktionen"),(0,i.kt)("li",{parentName:"ul"},"Z\xe4hlfunktionen"),(0,i.kt)("li",{parentName:"ul"},"Suchfunktionen"),(0,i.kt)("li",{parentName:"ul"},"Verdichtungsfunktionen"),(0,i.kt)("li",{parentName:"ul"},"Ersetzungsfunktionen"),(0,i.kt)("li",{parentName:"ul"},"Verschiebefunktionen"),(0,i.kt)("li",{parentName:"ul"},"Gro\xdf- und Kleinschreibungsfunktionen")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap"},"DATA text TYPE string VALUE 'Schnupper Gas B\xf6sewicht'.\nDATA result TYPE i.\n\nresult = strlen( text ). \"Zeichenkettenl\xe4nge\nresult = find( val = text sub = 'a' ). \"Suchen\ntext = to_upper( text ). \"Umsetzen\n")))}l.isMDXComponent=!0}}]);