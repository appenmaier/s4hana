"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[1534],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),f=i,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(m,a(a({ref:n},p),{},{components:t})):r.createElement(m,a({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={title:"ABAP RESTful Application Programming Model (RAP)",description:"",sidebar_position:50,tags:[]},a=void 0,s={unversionedId:"documentation/rap/rap",id:"documentation/rap/rap",title:"ABAP RESTful Application Programming Model (RAP)",description:"",source:"@site/docs/documentation/rap/rap.md",sourceDirName:"documentation/rap",slug:"/documentation/rap/",permalink:"/s4hana/documentation/rap/",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/rap/rap.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"ABAP RESTful Application Programming Model (RAP)",description:"",sidebar_position:50,tags:[]},sidebar:"documentationSidebar",previous:{title:"Zugriffskontrollen",permalink:"/s4hana/documentation/abap-cds/access-controls"},next:{title:"Cookbook",permalink:"/s4hana/documentation/rap/cookbook/"}},l={},c=[],p={toc:c};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Das ",(0,i.kt)("em",{parentName:"p"},"ABAP RESTful Application Programming Model")," (RAP) definiert die Architektur f\xfcr die Anwendungsentwicklung in SAP S/4HANA und SAP S/4HANA Cloud. Es unterst\xfctzt die Entwicklung aller Arten von Fiori-Apps sowie Web-APIs und basiert auf erprobten Technologien und Frameworks wie den Core Data Services (CDS) zur Definition semantisch reichhaltiger Datenmodelle sowie einer Service-Infrastruktur zur Erstellung von OData-Services. Die Architektur einer RAP-Anwendung umfasst dabei die nachfolgenden Bereiche:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Gesch\xe4ftsobjekte")," stellen das Datenmodell dar und definieren das Verhalten, also die datenbezogene Logik. Sie werden \xfcber ABAP-CDS-Views, Verhaltensdefinitionen sowie Verhaltensimplementierungen festgelegt"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Gesch\xe4ftsobjekt-Projektionen")," erm\xf6glichen das Festlegen spezifischer Gesch\xe4ftsobjekte f\xfcr einen bestimmten Gesch\xe4ftsservice. Sie bestehen aus ABAP-CDS-Projektionsviews, Verhaltensprojektionen sowie spezifischen Implementierungen"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Servicedefinitionen")," legen den Umfang eines Gesch\xe4ftsservices fest. Dies umfasst insbesondere die Gesch\xe4ftsobjekt-Projektionen, die der Gesch\xe4ftsservice bereitstellen soll"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Servicebindungen")," legen das Kommunikationsprotokoll (OData v2 oder OData v4) sowie die Art des Gesch\xe4ftsservices (UI oder Web API) fest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"SAP FioriUIs")," stellen Oberfl\xe4chen f\xfcr h\xe4ufig verwendete Anwendungsmuster bereit"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Web APIs")," bieten eine \xf6ffentliche Schnittstelle f\xfcr den Zugriff auf die Services")),(0,i.kt)("mermaid",{value:"flowchart RL\n    api --- binding\n    ui --- binding\n    binding --- definition\n    definition --- projection\n    definition --- query\n    projection --- bo\n\n    ui(SAP Fiori UI)\n    api(Web API)\n    binding(Servicebindung)\n    definition(Servicedefintion)\n    projection(Gesch\xe4ftsobjekt-Projektion)\n    bo(Gesch\xe4ftsobjekt)\n    query(Abfrage)"}))}u.isMDXComponent=!0}}]);