"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[7819],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>p});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=u(t),p=i,g=m["".concat(s,".").concat(p)]||m[p]||c[p]||a;return t?r.createElement(g,l(l({ref:n},d),{},{components:t})):r.createElement(g,l({ref:n},d))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8254:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var r=t(7462),i=(t(7294),t(3905));const a={title:"Einf\xfchrung",slug:"/",description:"",sidebar_position:10,tags:[]},l=void 0,o={unversionedId:"documentation/introduction",id:"documentation/introduction",title:"Einf\xfchrung",description:"",source:"@site/docs/documentation/introduction.md",sourceDirName:"documentation",slug:"/",permalink:"/s4hana/",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/introduction.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Einf\xfchrung",slug:"/",description:"",sidebar_position:10,tags:[]},sidebar:"documentationSidebar",next:{title:"ABAP",permalink:"/s4hana/documentation/abap/"}},s={},u=[{value:"Architektur einer RAP-Anwendung",id:"architektur-einer-rap-anwendung",level:2},{value:"Laufzeitartefakte einer RAP-Anwendung",id:"laufzeitartefakte-einer-rap-anwendung",level:2}],d={toc:u};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Das mittlerweile als ",(0,i.kt)("em",{parentName:"p"},"klassische ABAP Programmiermodell")," bekannte ABAP Programmiermodell wurde ursp\xfcnglich f\xfcr die Anwendungsentwicklung f\xfcr SAP R/3 entworfen. Es setzt \xfcberwiegend auf klassische SAP-Technologien wie klassisches ABAP, klassische Datenbankviews sowie klassische ABAP-Programme, Dynpros und WebDynpros. F\xfcr die Anwendungsentwicklung in SAP S/4HANA wurde ein neues Programmiermodell, das sogenannte ",(0,i.kt)("em",{parentName:"p"},"ABAP Programmiermodell f\xfcr SAP Fiori")," entwickelt. Dieses unterst\xfctzt die Entwicklung verschiedener Fiori-Anwendungen wie Transaktions-, Such-, Analyse- und Planungs-Apps und basiert auf erprobten Technologien wie ABAP CDS zur Definition semantisch reichhaltiger Datenmodelle, dem OData-Protokoll, dem Business Object Processing Framework (BOPF) sowie SAPUI5-basierten Benutzeroberfl\xe4chen. Das ",(0,i.kt)("em",{parentName:"p"},"ABAP RESTful Application Programming Model")," (RAP) wiederum stellt eine konsequente Weiterentwicklung des ABAP Programmiermodells f\xfcr SAP Fiori dar und wird vor allem f\xfcr die Anwendungsentwicklung in SAP S/4HANA (Cloud) verwendet. Es unterst\xfctzt die Entwicklung aller Arten von SAP Fiori Apps, Web APIs sowie Events und basiert auf erprobten Technologien und Frameworks wie den Core Data Services (CDS) zur Definition semantisch reichhaltiger Datenmodelle sowie einer Service-Infrastruktur zur Erstellung von OData-Services."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null},"Classic ABAP"),(0,i.kt)("th",{parentName:"tr",align:null},"ABAP Programming Model for SAP Fiori"),(0,i.kt)("th",{parentName:"tr",align:null},"ABAP RESTful Application Programming Model (RAP)"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Applikationsserver"),(0,i.kt)("td",{parentName:"tr",align:null},"SAP NetWeaver"),(0,i.kt)("td",{parentName:"tr",align:null},"SAP NetWeaver"),(0,i.kt)("td",{parentName:"tr",align:null},"SAP NetWeaver, SAP BTP - ABAP Environment")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Entwicklungsumgebung"),(0,i.kt)("td",{parentName:"tr",align:null},"SAPUI, ADT"),(0,i.kt)("td",{parentName:"tr",align:null},"SAPGUI, ADT, SAP BAS"),(0,i.kt)("td",{parentName:"tr",align:null},"ADT, SAP BAS")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Release Fokus"),(0,i.kt)("td",{parentName:"tr",align:null},"SAP R/3"),(0,i.kt)("td",{parentName:"tr",align:null},"SAP S/4HANA"),(0,i.kt)("td",{parentName:"tr",align:null},"SAP S/4HANA (Cloud)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Datenmodellierung"),(0,i.kt)("td",{parentName:"tr",align:null},"Data Dictionary"),(0,i.kt)("td",{parentName:"tr",align:null},"ABAP CDS"),(0,i.kt)("td",{parentName:"tr",align:null},"ABAP CDS")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Service-Definition"),(0,i.kt)("td",{parentName:"tr",align:null},"SEGW"),(0,i.kt)("td",{parentName:"tr",align:null},"SEGW, @OData"),(0,i.kt)("td",{parentName:"tr",align:null},"Business Service")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Service-Implementierung"),(0,i.kt)("td",{parentName:"tr",align:null},"Classic ABAP, BOPF"),(0,i.kt)("td",{parentName:"tr",align:null},"ABAP, ABAP CDS, BOPF"),(0,i.kt)("td",{parentName:"tr",align:null},"ABAP, ABAP CDS, RAP BO")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Oberfl\xe4chen"),(0,i.kt)("td",{parentName:"tr",align:null},"Report, (Web-)Dynpro"),(0,i.kt)("td",{parentName:"tr",align:null},"SAPUI5"),(0,i.kt)("td",{parentName:"tr",align:null},"SAPUI5")))),(0,i.kt)("h2",{id:"architektur-einer-rap-anwendung"},"Architektur einer RAP-Anwendung"),(0,i.kt)("p",null,"Die Architektur einer RAP-Anwendung umfasst die nachfolgenden Bereiche:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Datenmodellierung und Verhalten")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"RAP Business Objects")," (RAP BOs) legen das Datenmodell f\xfcr transaktionale Anwendungen fest und beinhalten neben den Daten auch die datenbezogene Logik, also das Verhalten"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"CDS Entities")," erm\xf6glichen die Definition von nicht-transaktionalen Datenmodellen, die f\xfcr Abfragen verwendet werden k\xf6nnen")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Service-Bereitstellung")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"RAP BO Projections")," und ",(0,i.kt)("em",{parentName:"li"},"Interfaces")," erm\xf6glichen die Definition spezifischer Gesch\xe4ftsservices"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Service Definitions")," legen den Umfang eines Gesch\xe4ftsservices fest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Service Bindings")," legen das Kommunikationsprotokoll (OData v2 oder OData v4) sowie die Art des Gesch\xe4ftsservices (UI, Web API oder Event) fest")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Service-Verwendung")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"SAP Fiori UIs")," stellen Oberfl\xe4chen f\xfcr h\xe4ufig verwendete Anwendungsmuster bereit"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Web APIs")," bieten eine \xf6ffentliche Schnittstelle f\xfcr den Zugriff auf die Gesch\xe4ftsservices"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Events")," erm\xf6glichen das asynchrone Konsumieren von RAP BOs")),(0,i.kt)("mermaid",{value:"flowchart LR\n    binding ---\x3e api\n    binding ---\x3e ui\n    binding ---\x3e event\n    definition ---\x3e binding\n    projection ---\x3e definition\n    interface ---\x3e definition\n    bo ---\x3e projection\n    bo ---\x3e interface\n    entity --\x3e definition\n\n    subgraph Service-Verwendung\n        ui(SAP Fiori UI)\n        api(Web API)\n        event(Event)\n    end\n\n    subgraph Service-Bereitstellung\n        binding(Service Binding)\n        definition(Service Defintion)\n        projection(RAP BO Projection)\n        interface(Interface)\n    end\n\n    subgraph Datenmodellierung und Verhalten\n        bo(RAP Business Object)\n        entity(CDS Entity)\n    end"}),(0,i.kt)("h2",{id:"laufzeitartefakte-einer-rap-anwendung"},"Laufzeitartefakte einer RAP-Anwendung"),(0,i.kt)("p",null,"F\xfcr die Entwicklung von SAP Fiori Apps nach RAP kommen nachfolgende Laufzeitartefakte zum Einsatz:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Restricted Interface Views")," und ",(0,i.kt)("em",{parentName:"li"},"Projection Views")," legen das Datenmodell des RAP BOs fest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Metadata Extensions")," legen die Oberfl\xe4che fest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Access Controls")," steuern die Lesezugriffe"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Behavior Definitions")," legen das transaktionale Verhalten des RAP BOs fest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Behavior Implementation Classes")," beinhalten die Verhaltensimplementierungen"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Service Definitions")," legen den Umfang des Business Services fest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Service Bindings")," legen das Kommunikationsprotokoll sowie die Art des Business Services fest")),(0,i.kt)("mermaid",{value:"flowchart\n    serviceBinding -.- serviceDefinition\n    serviceDefinition -.- projectionView\n    projectionView -.- restrictedInterfaceView\n    restrictedInterfaceView -.- databaseTable\n    accessControl2 -.- projectionView\n    accessControl1 -.- restrictedInterfaceView\n    behaviorDefinition2 -.- projectionView\n    behaviorDefinition1 -.- restrictedInterfaceView\n    behaviorDefinition1 -.- behaviorImplementationClass\n    metadataExtension -.- projectionView\n\n    subgraph Business Services\n        serviceBinding(Service Binding)\n        serviceDefinition(Service Definition)\n    end\n\n    subgraph Source Code Library\n        behaviorImplementationClass(Behavior Implementation Class)\n    end\n\n    subgraph Core Data Services\n        behaviorDefinition1(Behavior Definition)\n        behaviorDefinition2(Behavior Definition)\n        accessControl1(Access Control)\n        accessControl2(Access Control)\n        metadataExtension(Metadata Extension)\n        projectionView(Projection View)\n        restrictedInterfaceView(Restricted Interface View)\n    end\n\n    subgraph Dictionary\n        databaseTable[(Database Table)]\n    end"}))}c.isMDXComponent=!0}}]);