"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[8912],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return n?r.createElement(m,c(c({ref:t},s),{},{components:n})):r.createElement(m,c({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,c[1]=p;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8665:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>b,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={title:"ZABAP_DEMO_ABAPOO_01",description:"Objekte und Referenzvariablen"},c=void 0,p={unversionedId:"abap-objects/code/reports/zabap_demo_abapoo_01",id:"abap-objects/code/reports/zabap_demo_abapoo_01",title:"ZABAP_DEMO_ABAPOO_01",description:"Objekte und Referenzvariablen",source:"@site/docs/abap-objects/code/reports/zabap_demo_abapoo_01.md",sourceDirName:"abap-objects/code/reports",slug:"/abap-objects/code/reports/zabap_demo_abapoo_01",permalink:"/s4hana/abap-objects/code/reports/zabap_demo_abapoo_01",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-objects/code/reports/zabap_demo_abapoo_01.md",tags:[],version:"current",frontMatter:{title:"ZABAP_DEMO_ABAPOO_01",description:"Objekte und Referenzvariablen"},sidebar:"abapObjectsSidebar",previous:{title:"ABAP Programme",permalink:"/s4hana/abap-objects/code/reports/"},next:{title:"ZABAP_DEMO_ABAPOO_02",permalink:"/s4hana/abap-objects/code/reports/zabap_demo_abapoo_02"}},i={},l=[],s={toc:l};function b(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap"},"* Objekte und Referenzvariablen\nREPORT zabap_demo_abapoo_01.\n\n*-------------------------------------------------------------------*\n* Deklarationen\n*-------------------------------------------------------------------*\nDATA vehicle TYPE REF TO zcl_abap_vehicle.\nDATA vehicles TYPE TABLE OF REF TO zcl_abap_vehicle.\n\n*-------------------------------------------------------------------*\n* Objekterzeugungen\n*-------------------------------------------------------------------*\nvehicle = new #( ).\nvehicles = VALUE #( BASE vehicles (vehicle ) ).\nvehicle->set_make( 'Porsche' ).\nvehicle->set_model( '911' ).\n\nvehicle = new #( ).\nvehicles = VALUE #( BASE vehicles (vehicle ) ).\nvehicle->set_make( 'MAN' ).\nvehicle->set_model( 'TGX' ).\n\nvehicle = new #( ).\nvehicles = VALUE #( BASE vehicles (vehicle ) ).\nvehicle->set_make( 'Opel' ).\nvehicle->set_model( 'Zafira Life' ).\n\n*-------------------------------------------------------------------*\n* Ausgabe\n*-------------------------------------------------------------------*\nLOOP AT vehicles INTO vehicle.\n  WRITE: / vehicle->to_string( ).\nENDLOOP.\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/s4hana/abap-objects/code/classes/zcl_abap_vehicle_v1"},"Klasse ZCL_ABAP_VEHICLE (v1)")))}b.isMDXComponent=!0}}]);