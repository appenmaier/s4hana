"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[7707],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),i=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=i(e.components);return r.createElement(s.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=i(t),m=a,u=b["".concat(s,".").concat(m)]||b[m]||_[m]||c;return t?r.createElement(u,o(o({ref:n},p),{},{components:t})):r.createElement(u,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=b;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var i=2;i<c;i++)o[i]=t[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},5443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>_,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var r=t(7462),a=(t(7294),t(3905));const c={title:"Klasse ZCL_ABAP_VEHICLE (v3)",description:""},o=void 0,l={unversionedId:"abap-objects/code/class_zcl_abap_vehicle_v3",id:"abap-objects/code/class_zcl_abap_vehicle_v3",title:"Klasse ZCL_ABAP_VEHICLE (v3)",description:"",source:"@site/docs/abap-objects/code/class_zcl_abap_vehicle_v3.md",sourceDirName:"abap-objects/code",slug:"/abap-objects/code/class_zcl_abap_vehicle_v3",permalink:"/s4hana/docs/abap-objects/code/class_zcl_abap_vehicle_v3",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-objects/code/class_zcl_abap_vehicle_v3.md",tags:[],version:"current",frontMatter:{title:"Klasse ZCL_ABAP_VEHICLE (v3)",description:""},sidebar:"abapObjectsSidebar",previous:{title:"Klasse ZCL_ABAP_VEHICLE (v2)",permalink:"/s4hana/docs/abap-objects/code/class_zcl_abap_vehicle_v2"},next:{title:"Klasse ZCL_ABAP_VEHICLE (v4)",permalink:"/s4hana/docs/abap-objects/code/class_zcl_abap_vehicle_v4"}},s={},i=[],p={toc:i};function _(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap"},"CLASS zcl_abap_vehicle DEFINITION PUBLIC CREATE PUBLIC.\n\n  PUBLIC SECTION.\n    METHODS constructor\n      IMPORTING\n        i_make  TYPE string\n        i_model TYPE string.\n\n    METHODS get_make\n      RETURNING VALUE(r_make) TYPE string.\n\n    METHODS get_model\n      RETURNING VALUE(r_model) TYPE string.\n\n    METHODS to_string\n      RETURNING VALUE(r_string) TYPE string.\n\n    CLASS-METHODS get_number_of_vehicles\n      RETURNING VALUE(r_number_of_vehicles) TYPE i.\n\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\n    DATA make TYPE string.\n    DATA model TYPE string.\n    CLASS-DATA g_number_of_vehicles TYPE i.\n\nENDCLASS.\n\nCLASS zcl_abap_vehicle IMPLEMENTATION.\n\n  METHOD constructor.\n    make = i_make.\n    model = i_model.\n    g_number_of_vehicles = g_number_of_vehicles + 1.\n  ENDMETHOD.\n\n  METHOD get_make.\n    r_make = make.\n  ENDMETHOD.\n\n  METHOD get_model.\n    r_model = model.\n  ENDMETHOD.\n\n  METHOD get_number_of_vehicles.\n    r_number_of_vehicles = g_number_of_vehicles.\n  ENDMETHOD.\n  \nENDCLASS.\n")))}_.isMDXComponent=!0}}]);