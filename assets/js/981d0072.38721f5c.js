"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[662],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),_=c(n),d=r,m=_["".concat(o,".").concat(d)]||_[d]||u[d]||i;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=_;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}_.displayName="MDXCreateElement"},5018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={title:"ABAP-Objects-06",description:""},s=void 0,l={unversionedId:"exercises/abap-objects/abap-objects-06",id:"exercises/abap-objects/abap-objects-06",title:"ABAP-Objects-06",description:"",source:"@site/docs/exercises/abap-objects/abap-objects-06.md",sourceDirName:"exercises/abap-objects",slug:"/exercises/abap-objects/abap-objects-06",permalink:"/s4hana/exercises/abap-objects/abap-objects-06",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/exercises/abap-objects/abap-objects-06.md",tags:[],version:"current",frontMatter:{title:"ABAP-Objects-06",description:""},sidebar:"exercisesSidebar",previous:{title:"ABAP-Objects-05",permalink:"/s4hana/exercises/abap-objects/abap-objects-05"},next:{title:"ABAP-Objects-07",permalink:"/s4hana/exercises/abap-objects/abap-objects-07"}},o={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse <code>ZCL_???_AIRPLANE</code>",id:"hinweise-zur-klasse-zcl__airplane",level:2},{value:"Hinweise zur Klasse <code>ZCL_???_PASSENGER_PLANE</code>",id:"hinweise-zur-klasse-zcl__passenger_plane",level:2},{value:"Hinweise zur Klasse <code>ZCL_???_CARGO_PLANE</code>",id:"hinweise-zur-klasse-zcl__cargo_plane",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Erstelle die Klassen ",(0,r.kt)("inlineCode",{parentName:"li"},"ZCL_???_PASSENGER_PLANE")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"ZCL_???_CARGO_PLANE")," anhand des abgebildeten Klassendiagramms"),(0,r.kt)("li",{parentName:"ol"},"Passe die ausf\xfchrbare Klasse ",(0,r.kt)("inlineCode",{parentName:"li"},"ZCL_???_MAIN_AIRPLANES")," so an, dass statt gew\xf6hnlichen Flugzeugen Passagier- und Frachtflugzeuge erzeugt werden")),(0,r.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,r.kt)("mermaid",{value:"classDiagram\n   cl_airplane <|-- cl_passenger_plane\n   cl_airplane <|-- cl_cargo_plane\n\n   class cl_airplane {\n      +id: string &#123read-only&#125\n      +plane_type: string &#123read-only&#125\n      +empty_weight_in_tons: i &#123read-only&#125\n      +number_of_airplanes: i &#123read-only, static&#125\n      +constructor(id: string, plane_type: string, empty_weight_in_tons: i)\n      +get_total_weight_in_tons() i\n   }\n\n   class cl_passenger_plane {\n      +number_of_seats: i &#123read-only&#125\n      +constructor(id: string, plane_type: string, empty_weight_in_tons: i, number_of_seats: i)\n      +get_total_weight_in_tons() i\n   }\n\n   class cl_cargo_plane {\n      +cargo_in_tons: i &#123read-only&#125\n      +constructor(id: string, plane_type: string, empty_weight_in_tons: i, cargo_in_tons: i)\n      +get_total_weight_in_tons() i\n   }"}),(0,r.kt)("h2",{id:"hinweise-zur-klasse-zcl__airplane"},"Hinweise zur Klasse ",(0,r.kt)("inlineCode",{parentName:"h2"},"ZCL_???_AIRPLANE")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"GET_TOTAL_WEIGHT_IN_TONS")," soll das Gesamtgewicht nach der Formel ",(0,r.kt)("em",{parentName:"li"},"[Leergewicht]"," ","*"," 1,1")," zur\xfcckgeben")),(0,r.kt)("h2",{id:"hinweise-zur-klasse-zcl__passenger_plane"},"Hinweise zur Klasse ",(0,r.kt)("inlineCode",{parentName:"h2"},"ZCL_???_PASSENGER_PLANE")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"GET_TOTAL_WEIGHT_IN_TONS")," soll das Gesamtgewicht nach der Formel ",(0,r.kt)("em",{parentName:"li"},"[Leergewicht]"," ","*"," 1,1 + ","[Sitzpl\xe4tze]"," ","*"," 0,08")," zur\xfcckgeben")),(0,r.kt)("h2",{id:"hinweise-zur-klasse-zcl__cargo_plane"},"Hinweise zur Klasse ",(0,r.kt)("inlineCode",{parentName:"h2"},"ZCL_???_CARGO_PLANE")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,r.kt)("li",{parentName:"ul"},"Die Methode ",(0,r.kt)("inlineCode",{parentName:"li"},"GET_TOTAL_WEIGHT_IN_TONS")," soll das Gesamtgewicht nach der Formel ",(0,r.kt)("em",{parentName:"li"},"[Leergewicht]"," ","*"," 1,1 + ","[Frachtkapazit\xe4t]")," zur\xfcckgeben")))}u.isMDXComponent=!0}}]);