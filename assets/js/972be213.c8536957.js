"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[7943],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var _=t.createContext({}),p=function(e){var n=t.useContext(_),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(_.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,_=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,A=d["".concat(_,".").concat(m)]||d[m]||l[m]||o;return r?t.createElement(A,i(i({ref:n},s),{},{components:r})):t.createElement(A,i({ref:n},s))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var _ in n)hasOwnProperty.call(n,_)&&(c[_]=n[_]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9890:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>_,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var t=r(7462),a=(r(7294),r(3905));const o={title:"ABAP-Programm ZABAP_DEMO_ABAP_09",description:"Funktionsbausteine",sidebar_position:90},i=void 0,c={unversionedId:"abap/code/report_demo_09",id:"abap/code/report_demo_09",title:"ABAP-Programm ZABAP_DEMO_ABAP_09",description:"Funktionsbausteine",source:"@site/docs/abap/code/report_demo_09.md",sourceDirName:"abap/code",slug:"/abap/code/report_demo_09",permalink:"/s4hana/docs/abap/code/report_demo_09",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap/code/report_demo_09.md",tags:[],version:"current",sidebarPosition:90,frontMatter:{title:"ABAP-Programm ZABAP_DEMO_ABAP_09",description:"Funktionsbausteine",sidebar_position:90},sidebar:"abapSidebar",previous:{title:"ABAP-Programm ZABAP_DEMO_ABAP_08",permalink:"/s4hana/docs/abap/code/report_demo_08"},next:{title:"ABAP-Programm ZABAP_DEMO_ABAP_10",permalink:"/s4hana/docs/abap/code/report_demo_10"}},_={},p=[{value:"Funktionsbaustein Z_ABAP_GET_CONNECTION",id:"funktionsbaustein-z_abap_get_connection",level:2},{value:"ABAP-Programm ZABAP_DEMO_ABAP_09",id:"abap-programm-zabap_demo_abap_09",level:2},{value:"Nachrichtenklasse ZABAP",id:"nachrichtenklasse-zabap",level:2}],s={toc:p};function l(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"funktionsbaustein-z_abap_get_connection"},"Funktionsbaustein Z_ABAP_GET_CONNECTION"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap"},"FUNCTION Z_ABAP_GET_CONNECTION\n  IMPORTING\n    I_CARRIER_ID    TYPE S_CARR_ID\n    I_CONNECTION_ID TYPE S_CONN_ID\n  EXPORTING\n    E_CITY_FROM     TYPE S_FROM_CIT\n    E_CITY_TO       TYPE S_TO_CITY\n  EXCEPTIONS\n    INITIAL_CARRIER_ID\n    INITIAL_CONNECTION_ID.\n\n  IF i_carrier_id IS INITIAL.\n    RAISE initial_carrier_id.\n  ENDIF.\n\n  IF i_connection_id IS INITIAL.\n    RAISE initial_connection_id.\n  ENDIF.\n\n  e_city_from = ''.\n  e_city_to = ''.\n\nENDFUNCTION.\n")),(0,a.kt)("h2",{id:"abap-programm-zabap_demo_abap_09"},"ABAP-Programm ZABAP_DEMO_ABAP_09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-abap"},"REPORT zabap_demo_abap_09.\n\nPARAMETERS p_carrid TYPE s_carr_id DEFAULT 'LH'.\nPARAMETERS p_connid TYPE s_conn_id DEFAULT '0400'.\n\nDATA city_from TYPE s_from_cit.\nDATA city_to TYPE s_to_city.\n\nCALL FUNCTION 'Z_ABAP_GET_CONNECTION'\n  EXPORTING\n    i_carrier_id          = p_carrid\n    i_connection_id       = p_connid\n  IMPORTING\n    e_city_from           = city_from\n    e_city_to             = city_to\n  EXCEPTIONS\n    initial_carrier_id    = 1\n    initial_connection_id = 2\n    OTHERS                = 3.\nCASE sy-subrc.\n  WHEN 1.\n    MESSAGE e000(zabap) WITH 'Carrier ID'.\n  WHEN 2.\n    MESSAGE e000(zabap) WITH 'Connection ID'.\n  WHEN 3.\n    MESSAGE e001(zabap).\nENDCASE.\n\nWRITE: city_from, city_to.\n")),(0,a.kt)("h2",{id:"nachrichtenklasse-zabap"},"Nachrichtenklasse ZABAP"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"000, Initial Parameter: &1\n001, Internal Error\n")))}l.isMDXComponent=!0}}]);