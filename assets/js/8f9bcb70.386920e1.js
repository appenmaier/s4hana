"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[4979],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>p});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=d(t),p=i,b=c["".concat(l,".").concat(p)]||c[p]||u[p]||a;return t?r.createElement(b,o(o({ref:n},m),{},{components:t})):r.createElement(b,o({ref:n},m))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3981:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(7462),i=(t(7294),t(3905));const a={title:"Klassen, Attribute und Methoden",description:"",sidebar_position:20,tags:[]},o=void 0,s={unversionedId:"documentation/abap-objects/classes-attributes-and-methods",id:"documentation/abap-objects/classes-attributes-and-methods",title:"Klassen, Attribute und Methoden",description:"",source:"@site/docs/documentation/abap-objects/classes-attributes-and-methods.md",sourceDirName:"documentation/abap-objects",slug:"/documentation/abap-objects/classes-attributes-and-methods",permalink:"/s4hana/documentation/abap-objects/classes-attributes-and-methods",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/abap-objects/classes-attributes-and-methods.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Klassen, Attribute und Methoden",description:"",sidebar_position:20,tags:[]},sidebar:"documentationSidebar",previous:{title:"ABAP Objects",permalink:"/s4hana/documentation/abap-objects/"},next:{title:"Objekte und Referenzvariablen",permalink:"/s4hana/documentation/abap-objects/objects-and-references"}},l={},d=[{value:"Definition von Attributen",id:"definition-von-attributen",level:2},{value:"Definition von Methoden und Konstruktoren",id:"definition-von-methoden-und-konstruktoren",level:2},{value:"Implementieren von Methoden",id:"implementieren-von-methoden",level:2}],m={toc:d};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Klassen in ABAP werden in einen Definitionsbereich sowie einen Implementierungsbereich aufgeteilt: Der Definitionsbereich beinhaltet die Definition aller Klassenkomponenten (Attribute, Methoden, Konstanten, Typen, Interfaces), der Implementierungsbereich\numfasst ausschlie\xdflich die Implementierungen der Methoden. Der Definitionsbereich ist zudem unterteilt in einen \xf6ffentlichen, einen gesch\xfctzten sowie einen privaten Bereich."),(0,i.kt)("h2",{id:"definition-von-attributen"},"Definition von Attributen"),(0,i.kt)("p",null,'"Normale" Attribute werden, wie Variablen, mit dem Schl\xfcsselwort ',(0,i.kt)("inlineCode",{parentName:"p"},"DATA")," deklariert, Klassenattribute mit dem Schl\xfcsselwort ",(0,i.kt)("inlineCode",{parentName:"p"},"CLASS-DATA"),". Zur Typisierung k\xf6nnen ABAP-Standardtypen sowie lokale und globale Datentypen verwendet werden."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap",metastring:'title="CL_VEHICLE.abap" showLineNumbers',title:'"CL_VEHICLE.abap"',showLineNumbers:!0},"CLASS cl_vehicle DEFINITION PUBLIC CREATE PUBLIC.\n\n  PUBLIC SECTION.\n    DATA make  TYPE string READ-ONLY.\n    DATA model TYPE string READ-ONLY.\n    CLASS-DATA number_of_vehicles TYPE i READ-ONLY.\n\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\n\nENDCLASS.\n\nCLASS cl_vehicle IMPLEMENTATION.\n\nENDCLASS.\n")),(0,i.kt)("admonition",{title:"Hinweis",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Mit dem Zusatz ",(0,i.kt)("inlineCode",{parentName:"p"},"READ-ONLY")," k\xf6nnen \xf6ffentliche Attribute so eingeschr\xe4nkt werden, dass diese zwar nach au\xdfen sichtbar, aber nicht \xe4nderbar sind.")),(0,i.kt)("h2",{id:"definition-von-methoden-und-konstruktoren"},"Definition von Methoden und Konstruktoren"),(0,i.kt)("p",null,'"Normale" Methoden werden mit dem Schl\xfcsselwort ',(0,i.kt)("inlineCode",{parentName:"p"},"METHODS")," definiert, Klassenmethoden mit dem Schl\xfcsselwort ",(0,i.kt)("inlineCode",{parentName:"p"},"CLASS-METHODS"),". Die Signatur einer Methode kann Import-, Changing- und R\xfcckgabe-Parameter sowie Ausnahmen umfassen. Der Konstruktor\nbesitzt in ABAP den reservierten Namen ",(0,i.kt)("inlineCode",{parentName:"p"},"CONSTRUCTOR"),", der Klassenkonstruktor, der automatisch beim ersten Zugriff auf die Klasse aufgerufen wird, das Schl\xfcsselwort ",(0,i.kt)("inlineCode",{parentName:"p"},"CLASS_CONSTRUCTOR"),". Der Konstruktor kann nur IMPORTING-Parameter und Ausnahmen beinhalten,\nder Klassenkonstruktor weder das eine noch das andere."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap",metastring:'title="CL_VEHICLE.abap" showLineNumbers',title:'"CL_VEHICLE.abap"',showLineNumbers:!0},"CLASS cl_vehicle DEFINITION PUBLIC CREATE PUBLIC.\n\n  PUBLIC SECTION.\n    DATA make  TYPE string READ-ONLY.\n    DATA model TYPE string READ-ONLY.\n    CLASS-DATA number_of_vehicles TYPE i READ-ONLY.\n\n    METHODS constructor\n      IMPORTING\n        make  TYPE string\n        model TYPE string.\n\n    METHODS to_string\n      RETURNING VALUE(string) TYPE string.\n\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\n\nENDCLASS.\n\nCLASS cl_vehicle IMPLEMENTATION.\n\nENDCLASS.\n")),(0,i.kt)("admonition",{title:"Hinweis",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"ABAP kennt keine \xfcberladene Methoden, stattdessen k\xf6nnen mit dem Zusatz ",(0,i.kt)("inlineCode",{parentName:"p"},"OPTIONAL")," Import-Parameter definiert werden, die beim Aufruf der Methode nicht angegeben werden m\xfcssen. Zudem k\xf6nnen mit dem Zusatz ",(0,i.kt)("inlineCode",{parentName:"p"},"DEFAULT")," Import-Parameter mit Werten vorbelegt werden.")),(0,i.kt)("h2",{id:"implementieren-von-methoden"},"Implementieren von Methoden"),(0,i.kt)("p",null,"Die Implementierung von Methoden erfolgt im Implementierungsbereich der Klasse."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-abap",metastring:'title="CL_VEHICLE.abap" showLineNumbers',title:'"CL_VEHICLE.abap"',showLineNumbers:!0},"CLASS cl_vehicle DEFINITION PUBLIC CREATE PUBLIC.\n\n  PUBLIC SECTION.\n    DATA make  TYPE string READ-ONLY.\n    DATA model TYPE string READ-ONLY.\n    CLASS-DATA number_of_vehicles TYPE i READ-ONLY.\n\n    METHODS constructor\n      IMPORTING\n        make  TYPE string\n        model TYPE string.\n\n    METHODS to_string\n      RETURNING VALUE(string) TYPE string.\n\n  PROTECTED SECTION.\n\n  PRIVATE SECTION.\n\nENDCLASS.\n\nCLASS cl_vehicle IMPLEMENTATION.\n\n  METHOD constructor.\n    me->make = make.\n    me->model = model.\n\n    number_of_vehicles += 1.\n  ENDMETHOD.\n\n  METHOD to_string.\n    string = |{ make } { model }|.\n  ENDMETHOD.\n\nENDCLASS.\n")),(0,i.kt)("admonition",{title:"Hinweis",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Das Schl\xfcsselwort ",(0,i.kt)("inlineCode",{parentName:"p"},"ME")," erm\xf6glicht den Zugriff auf die Attribute und Methoden der Klasse.")))}u.isMDXComponent=!0}}]);