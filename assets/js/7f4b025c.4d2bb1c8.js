"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[9165],{3905:(e,a,t)=>{t.d(a,{Zo:()=>i,kt:()=>m});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=r.createContext({}),l=function(e){var a=r.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},i=function(e){var a=l(e.components);return r.createElement(s.Provider,{value:a},e.children)},_={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},b=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),b=l(t),m=n,u=b["".concat(s,".").concat(m)]||b[m]||_[m]||o;return t?r.createElement(u,c(c({ref:a},i),{},{components:t})):r.createElement(u,c({ref:a},i))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,c=new Array(o);c[0]=b;var p={};for(var s in a)hasOwnProperty.call(a,s)&&(p[s]=a[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,c[1]=p;for(var l=2;l<o;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},9220:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>c,default:()=>_,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=t(7462),n=(t(7294),t(3905));const o={title:"ABAP-Program ZABAP_DEMO_ABAPOO_06",description:"Downcast"},c=void 0,p={unversionedId:"abap-objects/code/reports/zabap_demo_abapoo_06",id:"abap-objects/code/reports/zabap_demo_abapoo_06",title:"ABAP-Program ZABAP_DEMO_ABAPOO_06",description:"Downcast",source:"@site/docs/abap-objects/code/reports/zabap_demo_abapoo_06.md",sourceDirName:"abap-objects/code/reports",slug:"/abap-objects/code/reports/zabap_demo_abapoo_06",permalink:"/s4hana/docs/abap-objects/code/reports/zabap_demo_abapoo_06",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-objects/code/reports/zabap_demo_abapoo_06.md",tags:[],version:"current",frontMatter:{title:"ABAP-Program ZABAP_DEMO_ABAPOO_06",description:"Downcast"},sidebar:"abapObjectsSidebar",previous:{title:"ABAP-Program ZABAP_DEMO_ABAPOO_05",permalink:"/s4hana/docs/abap-objects/code/reports/zabap_demo_abapoo_05"},next:{title:"ABAP-Program ZABAP_DEMO_ABAPOO_07",permalink:"/s4hana/docs/abap-objects/code/reports/zabap_demo_abapoo_07"}},s={},l=[],i={toc:l};function _(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-abap"},'REPORT zabap_demo_abapoo_06.\n\n"Deklarationen\nDATA vehicle TYPE REF TO zcl_abap_vehicle.\nDATA car TYPE REF TO zcl_abap_car.\nDATA truck TYPE REF TO zcl_abap_truck.\nDATA vehicles TYPE TABLE OF REF TO zcl_abap_vehicle.\n\n"Objekterzeugungen\nWRITE: / zcl_abap_vehicle=>get_number_of_vehicles( ).\n\nTRY.\n    car = new zcl_abap_car( make = |Porsche| model = |911| seats = 2 ).\n  CATCH zcx_abap_initial_parameter INTO DATA(x).\n    MESSAGE x->get_text( ) TYPE \'E\'.\nENDTRY. \nvehicles = VALUE #( BASE vehicles ( car ) ). "Upcast\n\nTRY.\n    truck = new zcl_abap_truck( make = |MAN| model = |TGX| cargo = 500 ).\n  CATCH zcx_abap_initial_parameter INTO x.\n    MESSAGE x->get_text( ) TYPE \'E\'.\nENDTRY. \nvehicles = VALUE #( BASE vehicles ( truck ) ). "Upcast\n\nTRY.\n    car = new zcl_abap_car( make = |Opel| model = |Zafira Life| seats = 6 ).\n  CATCH zcx_abap_initial_parameter INTO x.\n    MESSAGE x->get_text( ) TYPE \'E\'.\nENDTRY. \nvehicles = VALUE #( BASE vehicles ( car ) ). "Upcast\n\nWRITE: / zcl_abap_vehicle=>get_number_of_vehicles( ).\n\n"Ausgabe\nLOOP AT vehicles INTO vehicle. "Polymorphie\n  WRITE: / vehicle->to_string( ).\n  IF vehicle IS INSTANCE OF zcl_abap_car.\n    car = CAST #( vehicle ).\n    WRITE: / car->get_seats( ).\n  ENDIF.\nENDLOOP.\n')),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/s4hana/docs/abap-objects/code/classes/zcl_abap_vehicle_v4"},"Klasse ZCL_ABAP_VEHICLE (v4)")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/s4hana/docs/abap-objects/code/classes/zcl_abap_car"},"Klasse ZCL_ABAP_CAR")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/s4hana/docs/abap-objects/code/classes/zcl_abap_truck"},"Klasse ZCL_ABAP_TRUCK")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/s4hana/docs/abap-objects/code/classes/zcx_abap_initial_parameter"},"Ausnahmelasse ZCX_ABAP_INITIAL_PARAMETER")))}_.isMDXComponent=!0}}]);