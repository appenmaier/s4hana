"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[6205],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,g=d["".concat(s,".").concat(m)]||d[m]||l[m]||i;return t?r.createElement(g,o(o({ref:n},u),{},{components:t})):r.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4520:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={title:"Aggregatfunktionen",description:"",sidebar_position:50,tags:[]},o=void 0,c={unversionedId:"abap-cds/documentation/aggregat-functions",id:"abap-cds/documentation/aggregat-functions",title:"Aggregatfunktionen",description:"",source:"@site/docs/abap-cds/documentation/aggregat-functions.md",sourceDirName:"abap-cds/documentation",slug:"/abap-cds/documentation/aggregat-functions",permalink:"/s4hana/abap-cds/documentation/aggregat-functions",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-cds/documentation/aggregat-functions.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Aggregatfunktionen",description:"",sidebar_position:50,tags:[]},sidebar:"abapCDSSidebar",previous:{title:"Arithmetische Ausdr\xfccke",permalink:"/s4hana/abap-cds/documentation/arithmetic-expressions"},next:{title:"Eingebaute Funktionen",permalink:"/s4hana/abap-cds/documentation/built-in-functions"}},s={},p=[],u={toc:p};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Die ABAP CDS unterst\xfctzen die klassischen Aggregatfunktionen ",(0,a.kt)("inlineCode",{parentName:"p"},"count"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"sum"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"avg"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"min")," und ",(0,a.kt)("inlineCode",{parentName:"p"},"max"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"@AccessControl.authorizationCheck: #CHECK\n@EndUserText.label: 'Connection KPIs'\ndefine view entity ConnectionKPIs\n  as select from /dmo/flight\n{\n  key carrier_id                                                  as CarrierId,\n  key connection_id                                               as ConnectionId,\n      count(*)                                                    as NumberOfFlights,\n      count(distinct plane_type_id)                               as NumberOfDifferentPlaneTypeIds,\n      sum(seats_occupied)                                         as TotalOccupiedSeats,\n      sum(price)                                                  as TotalPrice,\n      avg(price as abap.dec(16,2))                                as AveragePrice,\n      min(seats_occupied)                                         as MinimumOccupiedSeats,\n      max(seats_occupied)                                         as MaximumOccupiedSeats,\n      sum(case when seats_occupied = seats_max then 1 else 0 end) as NumberOfBookedUpFlights,\n      sum(case when seats_occupied = 0 then 1 else 0 end)         as NumberOfEmptyFlights\n}\nwhere\n  price < 1000\ngroup by\n  carrier_id,\n  connection_id\nhaving\n  sum( price ) > 100000\n")),(0,a.kt)("admonition",{title:"Hinweis",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Alle nichtaggregierten Felder der Feldliste m\xfcssen nach dem Schl\xfcsselwort ",(0,a.kt)("inlineCode",{parentName:"p"},"group by")," aufgef\xfchrt werden.")),(0,a.kt)("admonition",{title:"Hinweis",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Die aggregierten Daten k\xf6nnen mit Hilfe von ",(0,a.kt)("inlineCode",{parentName:"p"},"having")," gefiltert werden.")))}l.isMDXComponent=!0}}]);