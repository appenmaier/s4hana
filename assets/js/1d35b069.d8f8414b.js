"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[3194],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(t),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8764:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const i={title:"Laufzeitartefakte einer RAP-Anwendung",description:"",sidebar_position:30,tags:[]},o=void 0,s={unversionedId:"documentation/rap/runtime-artifacts",id:"documentation/rap/runtime-artifacts",title:"Laufzeitartefakte einer RAP-Anwendung",description:"",source:"@site/docs/documentation/rap/runtime-artifacts.md",sourceDirName:"documentation/rap",slug:"/documentation/rap/runtime-artifacts",permalink:"/s4hana/documentation/rap/runtime-artifacts",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/rap/runtime-artifacts.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Laufzeitartefakte einer RAP-Anwendung",description:"",sidebar_position:30,tags:[]},sidebar:"documentationSidebar",previous:{title:"RAP Business Objects (RAP BOs)",permalink:"/s4hana/documentation/rap/rap-bos"},next:{title:"Entity Manipulation Language (EML)",permalink:"/s4hana/documentation/rap/eml"}},c={},l=[],p={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"F\xfcr die Entwicklung von SAP Fiori Apps nach RAP kommen nachfolgende Laufzeitartefakte zum Einsatz:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Datenbanktabellen")," und ",(0,a.kt)("em",{parentName:"li"},"Basic Interface Views")," legen das Datenmodell fest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"BO Base Views")," und ",(0,a.kt)("em",{parentName:"li"},"BO Projection Views")," legen das Datenmodell des RAP BOs fest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Behavior Definitions")," und ",(0,a.kt)("em",{parentName:"li"},"Behavior Projections")," legen das transaktionale Verhalten des RAP BOs fest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Metadata Extensions")," legen die Oberfl\xe4che fest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Access Controls")," steuern die Lesezugriffe"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Service Definitions")," legen den Umfang des Gesch\xe4ftsservices fest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Service Bindings")," legen das Kommunikationsprotokoll sowie die Art des Gesch\xe4ftsservices fest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Verhaltensimplementierungen")," beinhalten die Implementierungen des transaktionalen Verhaltens")),(0,a.kt)("mermaid",{value:"flowchart\n subgraph Dictionary\n   table(Datenbankabelle)\n end\n subgraph Core Data Services\n   base_view(Basic Interface View)\n   bo_base_view(BO Base View)\n   bo_projection(BO Projection)\n   behavior_definition(Behavior Definition)\n   behavior_projection(Behavior Projection)\n   metadata_extension(Metadata Extensions)\n   access_control(Access Control)\n end\n subgraph Business Service\n   service_definition(Service Definition)\n   service_binding(Service Binding)\n end\n subgraph Source Code Library\n   implementation(Verhaltensimplementierung)\n end\n\n service_binding --\x3e service_definition\n service_definition --\x3e bo_projection\n bo_projection --\x3e bo_base_view\n metadata_extension --\x3e bo_projection\n access_control --\x3e bo_projection\n behavior_projection --\x3e bo_projection\n bo_base_view --\x3e base_view\n base_view --\x3e table\n behavior_definition --\x3e bo_base_view\n implementation --\x3e behavior_definition"}))}u.isMDXComponent=!0}}]);