"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[9641],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,b=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return t?a.createElement(b,o(o({ref:n},l),{},{components:t})):a.createElement(b,o({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={title:"ZABAP_Demo06",description:"Eingebaute Funktionen"},o=void 0,s={unversionedId:"abap-cds/code/cds-views/zabap_demo06",id:"abap-cds/code/cds-views/zabap_demo06",title:"ZABAP_Demo06",description:"Eingebaute Funktionen",source:"@site/docs/abap-cds/code/cds-views/zabap_demo06.md",sourceDirName:"abap-cds/code/cds-views",slug:"/abap-cds/code/cds-views/zabap_demo06",permalink:"/s4hana/abap-cds/code/cds-views/zabap_demo06",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/abap-cds/code/cds-views/zabap_demo06.md",tags:[],version:"current",frontMatter:{title:"ZABAP_Demo06",description:"Eingebaute Funktionen"},sidebar:"abapCDSSidebar",previous:{title:"ZABAP_Demo05",permalink:"/s4hana/abap-cds/code/cds-views/zabap_demo05"},next:{title:"ZABAP_Demo07",permalink:"/s4hana/abap-cds/code/cds-views/zabap_demo07"}},c={},p=[],l={toc:p};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"@AbapCatalog.sqlViewName: 'ZABAPDEMO06'\n@AbapCatalog.compiler.compareFilter: true\n@AbapCatalog.preserveKey: true\n@AccessControl.authorizationCheck: #CHECK\n@EndUserText.label: 'Demo 6: Built-In Functions'\ndefine view ZABAP_Demo06\n  as select from sflight\n    inner join   spfli on  sflight.carrid = spfli.carrid\n                       and sflight.connid = spfli.connid\n{\n  /*\n   * Numerische Funktionen\n   */\n  5.0 / 3.0                                                as Fltp1,\n  div(5, 3)                                                as Div1,\n  mod(5, 3)                                                as Mod1,\n  division(5, 3, 2)                                        as Division1,\n  price                                                    as Price,\n  round(price, -2)                                         as RoundedPrice,\n  floor(1.9)                                               as Floor1,\n  ceil(1.1)                                                as Ceil1,\n  1.43565                                                  as Fltp2,\n  fltp_to_dec(1.43565 as abap.dec(16,2))                   as FltpToDec1,\n  /*\n   * Zeichenkettenfunktionen\n   */\n  concat_with_space('Hallo', 'Welt', 1)                    as ConcatWithSpace1,\n  planetype                                                as Planetype,\n  replace(replace(planetype, 'A', 'B'), '600', '400')      as ReplacedPlanetype,\n  substring('Hallo Welt', 7, 4)                            as Substring1,\n  length('X  ')                                            as LengthXSS,\n  length('  X')                                            as LengthSSX,\n  length(' ')                                              as LengthS,\n  /*\n   * W\xe4hrungs- und Einheitenumrechnung\n   */\n  distance                                                 as OldDistance,\n  distid                                                   as OldDistanceUnit,\n  @Semantics.quantity.unitOfMeasure: 'ConvertedDistanceUnit'\n  unit_conversion(\n    quantity => distance,\n    source_unit => distid,\n    target_unit => cast('KM' as abap.unit) )               as ConvertedDistance,\n  cast('KM' as abap.unit)                                  as ConvertedDistanceUnit,\n  /*\n   * Datums- und Zeitfunktionen\n   */\n  dats_add_days(cast('20211005' as abap.dats), 14, 'FAIL') as DatsAddDays\n}\n")))}d.isMDXComponent=!0}}]);