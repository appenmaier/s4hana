"use strict";(self.webpackChunkabap=self.webpackChunkabap||[]).push([[1679],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},l=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(t),m=r,g=l["".concat(c,".").concat(m)]||l[m]||d[m]||i;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=l;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}l.displayName="MDXCreateElement"},6811:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={title:"Aggregatfunktionen",description:"",sidebar_position:60,tags:[]},o=void 0,s={unversionedId:"documentation/abap-cds/aggregat-functions",id:"documentation/abap-cds/aggregat-functions",title:"Aggregatfunktionen",description:"",source:"@site/docs/documentation/abap-cds/aggregat-functions.md",sourceDirName:"documentation/abap-cds",slug:"/documentation/abap-cds/aggregat-functions",permalink:"/s4hana/documentation/abap-cds/aggregat-functions",draft:!1,editUrl:"https://github.com/appenmaier/s4hana/tree/main/docs/documentation/abap-cds/aggregat-functions.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{title:"Aggregatfunktionen",description:"",sidebar_position:60,tags:[]},sidebar:"documentationSidebar",previous:{title:"Dom\xe4nenfestwerte",permalink:"/s4hana/documentation/abap-cds/domain-values"},next:{title:"Views mit Parametern",permalink:"/s4hana/documentation/abap-cds/parameters"}},c={},p=[],u={toc:p};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Die ABAP CDS unterst\xfctzen die klassischen Aggregatfunktionen ",(0,r.kt)("inlineCode",{parentName:"p"},"count"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sum"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"avg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"min")," und ",(0,r.kt)("inlineCode",{parentName:"p"},"max"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"@AccessControl.authorizationCheck: #CHECK\n@EndUserText.label: 'Connection KPIs'\ndefine view entity I_ConnectionKPIs\n  as select from /dmo/flight\n{\n  key carrier_id                                                  as CarrierId,\n  key connection_id                                               as ConnectionId,\n      count(*)                                                    as NumberOfFlights,\n      count(distinct plane_type_id)                               as NumberOfDifferentPlaneTypeIds,\n      sum(seats_occupied)                                         as TotalOccupiedSeats,\n      sum(price)                                                  as TotalPrice,\n      avg(price as abap.dec(16,2))                                as AveragePrice,\n      min(seats_occupied)                                         as MinimumOccupiedSeats,\n      max(seats_occupied)                                         as MaximumOccupiedSeats,\n      sum(case when seats_occupied = seats_max then 1 else 0 end) as NumberOfBookedUpFlights,\n      sum(case when seats_occupied = 0 then 1 else 0 end)         as NumberOfEmptyFlights\n}\nwhere\n  price < 1000\ngroup by\n  carrier_id,\n  connection_id\nhaving\n  sum( price ) > 100000\n")),(0,r.kt)("admonition",{title:"Hinweis",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Alle nichtaggregierten Felder der Feldliste m\xfcssen nach dem Schl\xfcsselwort ",(0,r.kt)("inlineCode",{parentName:"p"},"group by")," aufgef\xfchrt werden.")),(0,r.kt)("admonition",{title:"Hinweis",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Die aggregierten Daten k\xf6nnen mit Hilfe von ",(0,r.kt)("inlineCode",{parentName:"p"},"having")," gefiltert werden.")))}d.isMDXComponent=!0}}]);